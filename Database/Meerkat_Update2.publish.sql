/*
Deployment script for Meerkat

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Meerkat"
:setvar DefaultFilePrefix "Meerkat"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SQL2012\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SQL2012\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [app].[Activity].[ActivityType_ID] is being dropped, data loss could occur.

The column [app].[Activity].[SubOutput_ID] is being dropped, data loss could occur.

The column Code on table [app].[Activity] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column LongName in table [app].[Activity] is currently  NVARCHAR (500) NOT NULL but is being changed to  VARCHAR (500) NOT NULL. Data loss could occur.

The column ProjectID on table [app].[Activity] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [app].[Activity] where Code IS NULL OR ProjectID IS NULL)
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping FK_Activity_Project...';


GO
ALTER TABLE [app].[Activity] DROP CONSTRAINT [FK_Activity_Project];


GO
PRINT N'Dropping FK_Activity_SubOutput...';


GO
ALTER TABLE [app].[Activity] DROP CONSTRAINT [FK_Activity_SubOutput];


GO
PRINT N'Altering [MNEReports]...';


GO
ALTER USER [MNEReports]
    WITH LOGIN = [MNEReports];


GO
PRINT N'Altering [PWLAB\mneAdmin]...';


GO
ALTER USER [PWLAB\mneAdmin]
    WITH LOGIN = [PWLAB\mneAdmin];


GO
PRINT N'Altering [PWLAB\mneSPFInstall]...';


GO
ALTER USER [PWLAB\mneSPFInstall]
    WITH LOGIN = [PWLAB\mneSPFInstall];


GO
PRINT N'Altering [app].[Activity]...';


GO
ALTER TABLE [app].[Activity] DROP COLUMN [ActivityType_ID], COLUMN [SubOutput_ID];


GO
ALTER TABLE [app].[Activity] ALTER COLUMN [Code] VARCHAR (50) NOT NULL;

ALTER TABLE [app].[Activity] ALTER COLUMN [LongName] VARCHAR (500) NOT NULL;

ALTER TABLE [app].[Activity] ALTER COLUMN [ProjectID] INT NOT NULL;


GO
PRINT N'Creating FK_Activity_Project...';


GO
ALTER TABLE [app].[Activity] WITH NOCHECK
    ADD CONSTRAINT [FK_Activity_Project] FOREIGN KEY ([ProjectID]) REFERENCES [app].[Project] ([ProjectID]);


GO
PRINT N'Altering [app].[DimActivity]...';


GO
ALTER view [app].[DimActivity] as
/****** Script for SelectTopNRows command from SSMS  ******/
SELECT  [ActivityID] as Activity_ID
            ,ShortName + ' : ' + left(LongName,80) as ShortName
      ,Left(LongName, 255) as LongName
      ,left(Code + ' : ' + LongName,255) as FullName
      ,Left(TextDescription,255) as TextDescription
      --,[SubOutput_ID]
      --,[BusinessKey]
      --,[Target]
      ,[Code]
      --,[ActivityType_ID]
      --,[Sharepoint_ID]

  FROM [app].[Activity]
GO
PRINT N'Altering [dbo].[DimIndicatorMultiLevel]...';


GO


ALTER VIEW  [DimIndicatorMultiLevel]
as 
/*SELECT top 1000000 *


,TermsetDeepGrainID = COALESCE(TermSetID7, TermsetID6, TermsetId5, TermsetID4, TermsetID3, TermsetID2, TermsetID1)
 FROM (

      ---------------------------------------


      SELECT NameLevel = 'Program of Action'
	  ,TermSetDescription  = 'Program of Action Outcomes'
	  ,LCID = ''
	  ,AvailableForTagging = 'TRUE'
	  ,TermDescription = ''
      ,TermSetLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80) 
       
      ,TermSetLevel2 = 'Indicators'
      ,TermSetLevel3 =   i.shortname + ' : ' + left(i.longname,80)
      ,TermSetLevel4 = null
      ,TermSetLevel5 = null
      ,TermSetLevel6 = null
      ,TermSetLevel7 = null
      
      
      ,CodeLevel1 = oc.Code
      ,CodeLevel2 = 'Ind'
      ,CodeLevel3 =   i.Code
      ,CodeLevel4 = null
      ,CodeLevel5 = null
      ,CodeLevel6 = null
      ,CodeLevel7 = null
      
      ,NameLevel1 = oc.shortname 
      ,NameLevel2 = 'Indicators'
      ,NameLevel3 =   i.ShortName
      ,NameLevel4 = null
      ,NameLevel5 = null
      ,NameLevel6 = null
      ,NameLevel7 = null
      
      ,LongNameLevel1 = oc.LongName 
      ,LongNameLevel2 = 'Indicators'
      ,LongNameLevel3 =   i.LongName
      ,LongNameLevel4 = null
      ,LongNameLevel5 = null
      ,LongNameLevel6 = null
      ,LongNameLevel7 = null
      
      
       ,TermSetID1 = RIGHT ('000' + Cast( oc.OutcomeID as varchar(50)), 4)
      ,TermSetID2 = RIGHT ('000' + Cast( oc.OutcomeID as varchar(50)), 4) + 'Indicators'
      ,TermSetID3 = RIGHT ('000' + Cast(   i.IndicatorID as varchar(50)), 4)
      ,TermSetID4 = null
      ,TermSetID5 = null
      ,TermSetID6 = null
      ,TermSetID7 = null
      ,Indicator_ID = i.IndicatorID
      ,i.UnitOfMeasure,i.isKeyIndicator
      from app.Outcome oc

      
       inner join app.INdicator I
      on oc.OutcomeID = i.OutcomeID
           UNION ALL
      ------------------------------------
      --Outputs
      


      SELECT NameLevel = 'Program of Action'
	  ,TermSetDescription  = 'Program of Action Outcomes'
	  ,LCID = ''
	  ,AvailableForTagging = 'TRUE'
	  ,TermDescription = ''
      ,TermSetLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80) 
      ,TermSetLevel2 =  otp.shortname + ' : ' + left(otp.longname,80)
      ,TermSetLevel3 = 'Indicators'
      ,TermSetLevel4 =  i.shortname + ' : ' + left(i.longname,80)
      ,TermSetLevel5 = null
      ,TermSetLevel6 = null
      ,TermSetLevel7 = null
      
      ,CodeLevel1 = oc.Code
      ,CodeLevel2 = otp.Code
      ,CodeLevel3 = 'Ind'
      ,CodeLevel4 = i.Code
      ,CodeLevel5 = null
      ,CodeLevel6 = null
      ,CodeLevel7 = null
      
      ,NameLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80)
      ,NameLevel2 = otp.ShortName
      ,NameLevel3 = 'Indicators' 
      ,NameLevel4 =  i.ShortName
      ,NameLevel5 = null
      ,NameLevel6 = null
      ,NameLevel7 = null
      
       ,LongNameLevel1 = oc.LongName --+ ' : ' + LEFT(oc.LongLongName,80)
      ,LongNameLevel2 = otp.LongName
      ,LongNameLevel3 = 'Indicators' 
      ,LongNameLevel4 =  i.LongName
      ,LongNameLevel5 = null
      ,LongNameLevel6 = null
      ,LongNameLevel7 = null
      ,TermSetID1 = RIGHT ('000' + Cast( oc.OutcomeID  as varchar(50)), 4) 
      ,TermSetID2 = RIGHT ('000' + Cast(  otp.Output_ID  as varchar(50)), 4) 
      ,TermSetID3 = RIGHT ('000' +Cast(  otp.Output_ID as varchar(50)), 4)  + 'Indicators' 
      ,TermSetID4 = RIGHT ('000' +Cast( i.IndicatorID as varchar(50)), 4) 
      ,TermSetID5 = null
      ,TermSetID6 = null
      ,TermSetID7 = null
      ,Indicator_ID = i.IndicatorID
      ,i.UnitOfMeasure,i.isKeyIndicator
      from app.Outcome oc
      inner join app.Output otp
      on oc.outcomeid = otp.outcomeid

      
       inner join app.INdicator I
      on otp.output_id = i.output_id
      
           
      
      
       UNION ALL
      SELECT NameLevel = 'Program of Action'
	  ,TermSetDescription  = 'Program of Action Outcomes'
	  ,LCID = ''
	  ,AvailableForTagging = 'TRUE'
	  ,TermDescription = ''
      ,TermSetLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80) 
      ,TermSetLevel2 =  otp.shortname + ' : ' + left(otp.longname,80)
      ,TermSetLevel3 = so.shortname + ' : ' + left(so.longname,80)
      ,TermSetLevel4 = 'Indicators'
      ,TermSetLevel5 = i.shortname + ' : ' + left(i.longname,80)
      ,TermSetLevel6 = null
      ,TermSetLevel7 = null
      ,CodeLevel1 = oc.Code
      ,CodeLevel2 = otp.Code
      ,CodeLevel3 = so.Code
      ,CodeLevel4 = 'Ind'
      ,CodeLevel5 = i.Code
      ,CodeLevel6 = null
      ,CodeLevel7 = null
      
      ,NameLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80) 
      ,NameLevel2 = otp.ShortName
      ,NameLevel3 =  so.ShortName
      ,NameLevel4 =  'Indicators'
      ,NameLevel5 = i.ShortName
      ,NameLevel6 = null
      ,NameLevel7 = null
            ,LongNameLevel1 = oc.TextDescription --+ ' : ' + LEFT(oc.LongName,80) 
      ,LongNameLevel2 = otp.TextDescription
      ,LongNameLevel3 =  so.TextDescription
      ,LongNameLevel4 =  'Indicators'
      ,LongNameLevel5 = i.LongName
      ,LongNameLevel6 = null
      ,LongNameLevel7 = null
       ,TermSetID1 = RIGHT ('000' + Cast( oc.OutcomeID as varchar(50)), 4)
      ,TermSetID2 = RIGHT ('000' +Cast(  otp.Output_ID as varchar(50)),4)
      ,TermSetID3 = RIGHT ('000' +Cast( so.SubOutput_ID as varchar(50)),4)
      ,TermSetID4 = RIGHT ('000' +Cast( so.SubOutput_ID as varchar(50)),4) + 'Indicators'
      ,TermSetID5 = RIGHT ('000' +Cast( i.IndicatorID as varchar(50)),4)
      ,TermSetID6 = null
      ,TermSetID7 = null
       ,Indicator_ID = i.IndicatorID
       ,i.UnitOfMeasure,i.isKeyIndicator
      from app.Outcome oc
      inner join app.Output otp
      on oc.outcomeid = otp.outcomeid
       inner join app.SubOutput so
      on otp.output_id = so.output_id
      
       inner join app.INdicator I
      on so.suboutput_id = i.suboutput_id
      
      
      ----------------------------------
      --Activities

      
      UNION ALL
       SELECT NameLevel = 'Program of Action'
	  ,TermSetDescription  = 'Program of Action Outcomes'
	  ,LCID = ''
	  ,AvailableForTagging = 'TRUE'
	  ,TermDescription = ''
      ,TermSetLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80) 
      ,TermSetLevel2 =  otp.shortname + ' : ' + left(otp.longname,80)
      ,TermSetLevel3 = so.shortname + ' : ' + left(so.longname,80)
      ,TermSetLevel4 = a.shortname + ' : ' + left(a.longname,80)
      ,TermSetLevel5 = 'Indicators'
      ,TermSetLevel6 = i.shortname + ' : ' + left(i.longname,80)
      ,TermSetLevel7 = null
      ,CodeLevel1 = oc.Code
      ,CodeLevel2 = otp.Code
      ,CodeLevel3 = so.Code
      ,CodeLevel4 = a.Code
      ,CodeLevel5 = 'Ind'
      ,CodeLevel6 = i.Code
      ,CodeLevel7 = null
      
      ,NameLevel1 = oc.shortname --+ ' : ' + LEFT(oc.Longname,80) 
      ,NameLevel2 = otp.ShortName
      ,NameLevel3 =  so.ShortName
      ,NameLevel4 =  a.ShortName
      ,NameLevel5 = 'Indicators'
      ,NameLevel6 = i.ShortName
      ,NameLevel7 = null
            ,LongNameLevel1 = oc.LongName --+ ' : ' + LEFT(oc.LongLongName,80) 
      ,LongNameLevel2 = otp.LongName
      ,LongNameLevel3 =  so.LongName
      ,LongNameLevel4 =  a.LongName
      ,LongNameLevel5 = 'Indicators'
      ,LongNameLevel6 = i.LongName
      ,LongNameLevel7 = null
        ,TermSetID1 = RIGHT ('000' + Cast( oc.OutcomeID as varchar(50)), 4)
      ,TermSetID2 = RIGHT ('000' +Cast(  otp.Output_ID as varchar(50)),4)
      ,TermSetID3 = RIGHT ('000' +Cast( so.SubOutput_ID as varchar(50)),4)
      ,TermSetID4 =RIGHT ('000' + Cast( a.ActivityID as varchar(50)),4)
      ,TermSetID5 =RIGHT ('000' +Cast(  a.ActivityID as varchar(50)),4) + 'Indicators'
      ,TermSetID6 = RIGHT ('000' +Cast( i.IndicatorID as varchar(50)),4)
      ,TermSetID7 = null
 
 ,Indicator_ID = i.IndicatorID
 ,i.UnitOfMeasure,i.isKeyIndicator
      from app.Outcome oc
      inner join app.Output otp
      on oc.outcomeID = otp.outcomeID
       inner join app.SubOutput so
      on otp.output_id = so.output_id
      
       inner join app.Activity A
      on so.suboutput_id = a.suboutputID
      
      inner join app.Indicator I
      on a.activityID = i.activity_id

      
      ) src 
     
	  WHERE 
			(	COALESCE (TermSetLevel1, '') NOT LIKE '%Overall Status%'	) 
		AND (	COALESCE (TermSetLevel2, '') NOT LIKE '%Overall Status%'	) 
		AND (	COALESCE (TermSetLevel3, '') NOT LIKE '%Overall Status%'	) 
		AND (	COALESCE (TermSetLevel4, '') NOT LIKE '%Overall Status%'	) 
		AND (	COALESCE (TermSetLevel5, '') NOT LIKE '%Overall Status%'	) 
		AND (	COALESCE (TermSetLevel6, '') NOT LIKE '%Overall Status%'	) 
		AND (	COALESCE (TermSetLevel7, '') NOT LIKE '%Overall Status%'	)
	  

      ORDER BY TermSetID1,
  TermSetID2,
  TermSetID3,
  TermSetID4,
  TermSetID5,
  TermSetID6,
  TermSetID7

  */
  SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[oldOutcome3MenuLink]...';


GO

ALTER VIEW [mm].[oldOutcome3MenuLink]
AS
/*
SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome3/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome3MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=10
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome3/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome3MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=10
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT3','3')
,Link = '/Outcome3/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome3MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=10
*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[oldOutcome4MenuLink]...';


GO

ALTER VIEW [mm].[oldOutcome4MenuLink]
AS
/*
SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome4/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome4MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE    do.outcomeId=11
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome4/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome4MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE    do.outcomeId=11
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT4','4')
,Link = '/Outcome4/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome4MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=11
*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[oldOutcome5MenuLink]...';


GO

ALTER VIEW [mm].[oldOutcome5MenuLink]
AS
/*SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome5/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome5MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=12
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome5/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome5MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=12
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT5','5')
,Link = '/Outcome5/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome5MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=12
*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[oldOutcome6MenuLink]...';


GO

ALTER VIEW [mm].[oldOutcome6MenuLink]
AS
/*
SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome6/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome6MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=13
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome6/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome6MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=13
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT6','6')
,Link = '/Outcome6/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome6MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=13

*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[oldOutcome7MenuLink]...';


GO

ALTER VIEW [mm].[oldOutcome7MenuLink]
AS
/*
SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome7/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome7MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=14
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome7/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome7MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=14
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT7','7')
,Link = '/Outcome7/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome7MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=14

*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[oldOutcome8MenuLink]...';


GO

ALTER VIEW [mm].[oldOutcome8MenuLink]
AS
/*
SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome8/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome8MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=15
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome8/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome8MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=15
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT8','8')
,Link = '/Outcome8/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome8MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=15
*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[Outcome1MenuLink]...';


GO

ALTER VIEW [mm].[Outcome1MenuLink]
AS
/*
SELECT     Title = 'Indicator Details', 
                      Link = '/Outcome1/Dashboards/Template%20Pages/Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', ID = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome1MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=7
UNION ALL
SELECT     Title = 'Provincial Indicator Details', 
                      Link = '/Outcome1/Dashboards/Template%20Pages/Provincial%20Indicator%20Details%20Page.aspx?qsIndCode=' + '[Sub Output].[Sub Output].%26[' + CAST(dso.SubOutput_ID
                       AS varchar(8)) + ']', Priority = 100 * dso.suboutput_id, Parent =
                          (SELECT     ID
                            FROM          mm.Outcome1MenuGROUP G
                            WHERE      G.Title  = replace(dso.Code,'STP','') + ' : ' + dso.LongName)
FROM         app.DimSubOutput dso INNER JOIN
                      app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE     do.outcomeId=7
UNION ALL
SELECT     
 Title = Replace(replace(da.FullName, '"', ''),'ACT1','1')
,Link = '/Outcome1/Dashboards/Template%20Pages/Milestones%20Page.aspx?qsActivity=' + '[Activity].[Activity].%26[' + CAST(da.activity_ID AS varchar(8)) + ']'
, Priority = 1 - da.Activity_ID + 5000
, Parent = (SELECT ID FROM mm.Outcome1MenuGROUP G WHERE G.ID = dso.SubOutput_ID)
FROM
app.DimActivity da INNER JOIN
app.DimSubOutput dso ON da.SubOutput_ID = dso.SubOutput_ID INNER JOIN
app.DimOutput do ON dso.Output_ID = do.Output_ID
WHERE do.outcomeId=7
*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [mm].[Outcome1MenuCategory]...';


GO








ALTER VIEW [mm].[Outcome1MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=1)
GO
PRINT N'Refreshing [mm].[oldOutcome1MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome1MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome1MenuGroup]...';


GO









ALTER VIEW [mm].[Outcome1MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=1)
GO
PRINT N'Altering [mm].[Outcome2MenuCategory]...';


GO






ALTER VIEW [mm].[Outcome2MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=2)
GO
PRINT N'Refreshing [mm].[oldOutcome2MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome2MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome2MenuGroup]...';


GO








ALTER VIEW [mm].[Outcome2MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=2)
GO
PRINT N'Altering [mm].[Outcome3MenuCategory]...';


GO







ALTER VIEW [mm].[Outcome3MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=3)
GO
PRINT N'Refreshing [mm].[oldOutcome3MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome3MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome3MenuGroup]...';


GO








ALTER VIEW [mm].[Outcome3MenuGroup]
AS
SELECT      Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=3)
GO
PRINT N'Altering [mm].[Outcome4MenuCategory]...';


GO








ALTER VIEW [mm].[Outcome4MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=4)
GO
PRINT N'Refreshing [mm].[oldOutcome4MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome4MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome4MenuGroup]...';


GO










ALTER VIEW [mm].[Outcome4MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=4)
GO
PRINT N'Altering [mm].[Outcome5MenuCategory]...';


GO








ALTER VIEW [mm].[Outcome5MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=5)
GO
PRINT N'Refreshing [mm].[oldOutcome5MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome5MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome5MenuGroup]...';


GO










ALTER VIEW [mm].[Outcome5MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=5)
GO
PRINT N'Altering [mm].[Outcome6MenuCategory]...';


GO








ALTER VIEW [mm].[Outcome6MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=6)
GO
PRINT N'Refreshing [mm].[oldOutcome6MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome6MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome6MenuGroup]...';


GO










ALTER VIEW [mm].[Outcome6MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=6)
GO
PRINT N'Altering [mm].[Outcome7MenuCategory]...';


GO








ALTER VIEW [mm].[Outcome7MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=7)
GO
PRINT N'Refreshing [mm].[oldOutcome7MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome7MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome7MenuGroup]...';


GO










ALTER VIEW [mm].[Outcome7MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=7)
GO
PRINT N'Altering [mm].[Outcome8MenuCategory]...';


GO








ALTER VIEW [mm].[Outcome8MenuCategory]
AS
SELECT Substring(Title,1,50) as Title, Link, ID 
FROM [mm].[ALL_OutcomeMenuCategory]
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=8)
GO
PRINT N'Refreshing [mm].[oldOutcome8MenuGroup]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome8MenuGroup]';


GO
PRINT N'Altering [mm].[Outcome8MenuGroup]...';


GO










ALTER VIEW [mm].[Outcome8MenuGroup]
AS
SELECT      Substring(Title,1,50) as Title, Link, Parent, ID
FROM mm.ALL_OutcomeMenuGroup 
WHERE OutcomeId		in (Select ID from (
Select Row_Number() Over (Partition by 1 Order By Code) as IDX, OutcomeID as ID
from app.Outcome Where Active=1 ) as IDX

Where IDX.IDX=8)
GO
PRINT N'Refreshing [mm].[ALL_OutcomeMenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[ALL_OutcomeMenuLink]';


GO
PRINT N'Refreshing [mm].[oldOutcome2MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[oldOutcome2MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome2MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome2MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome3MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome3MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome4MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome4MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome5MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome5MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome6MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome6MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome7MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome7MenuLink]';


GO
PRINT N'Refreshing [mm].[Outcome8MenuLink]...';


GO
EXECUTE sp_refreshsqlmodule N'[mm].[Outcome8MenuLink]';


GO
PRINT N'Altering [dbo].[sp_KeyIndicators]...';


GO

ALTER PROC [sp_KeyIndicators]
--declare
@OutcomeID int
,@KeyIndicator int = 1
,@LocationID int = 1
,@DataVersionID Int = 0
, @IncludeExtrapolatedTargetDates int = 0
as

/*
SELECT  

--rcdate,rcedate,
DENSE_RANK() OVER (ORDER BY code) % 2 AS RN,

 [dbo].[fn_ConcatenateIndicator_LocationTypeNames] (indicatorID) LocationTypeNames,
--dbo.fn_ConcatenateIndicator_DSName (indicatorid) 
null
DataSourceNames, -- no indicator dsn tbl

CASE WHEN MAX(RowX) over (partition by indicatorid,location_ID) > 1 THEN 
OriginalBaseline + ( (( Target2014 - OriginalBaseline)/  (CAST(MAX(RowX) over (partition by indicatorid,location_ID)  as float) -1))

 )
 * CAST((ROW_NUMBER() over (partition by indicatorid,location_ID order by ReportCycleDate_ID)) -1  as float)
 ELSE 
 OriginalBaseline END
 AS ExtrapolatedTarget,
* 
 FROM (
 SELECT
 
 L.Name LocationName, 
 rc.ID RCDate, -- incorrect as there is no proper dates in reporting cylce
--RCExtrapolated.ReportCycleReportDate_ID RCEDate,
 --i.baseline OriginalBaseline,
 --i.Target Target2014,
ROW_NUMBER() over (partition by i.indicatorid order by rc.StartDateID) as RowX,
CASE WHEN ROW_NUMBER() Over (PARTITION by i.IndicatorID,iv.location_ID order by rc.StartDateID) = 1 THEN i.Baseline
ELSE NULL END

 BaselineStart,

CASE WHEN ROW_NUMBER() Over ( PARTITION by i.IndicatorID,iv.location_ID order by rc.StartDateID DESC) = 1 THEN i.Target
ELSE NULL END TargetEnd, 
MaxValue = CASE WHEN i.Target > i.Baseline AND i.Target > ActualValue 
THEN i.Target
WHEN ActualValue > i.Baseline AND ActualValue  > i.Target 
THEN ActualValue 
ELSE i.Baseline
END,
--ISNULL( RCExtrapolated.FinancialYEar ,rc.FinancialYear) FinancialYear,
null FinancialYear, --rc.FinancialYear need to find new field to substitute for this

DENSE_RANK() OVER (order  by i.Code) IndicatorNum,
iv.Title DataLabel,

om.LongName OutcomeName,
o.LongName OutputName,
so.LongName SubOutputName,
i.LongName IndicatorName,
Path = om.Code + ' 
' + isnull(o.code,'') + ' 
' + isnull(so.code,''),
convert(varchar(20),DDStart.[Date],112) StartDate,
convert(varchar(20),DDEnd.[Date],112) EndDate,
DDEnd.YearNumber,
cast(rc.StartDateID as varchar) + ' - ' + 
cast(rc.EndDateID  as varchar) ReportingPeriod,
--DDNext.TextDate
null NextDate, -- need to get how to 
ISNULL([IndicatorValues_ID],0) [IndicatorValues_ID] 
      ,i.[IndicatorID]
      ,/*ISNULL(iv.Baseline, */i.[Baseline]/*)*/ [Baseline]
      ,/*ISNULL(iv.BaselineString, */ i.[BaselineString]/*) */BaselineString
      ,/*ISNULL(iv.TargetValue, */i.Target/*)*/ [TargetValue]
      ,/*ISNULL(iv.TargetValueString,*/ i.TargetString/*)*/ [TargetValueString]
      ,[ActualValue]
      ,[ActualValueString]
      ,ISNULL(iv.[ReleaseDate], i.ReleaseDate) ReleaseDate
      ,ISNULL(iv.[ReportingDate], i.ReportingDate) ReportingDate
      ,[IndicatorReportingDate]
      ,i.UnitOfMeasure
      
      ,i.[Output_ID]
      ,i.[OutcomeID]
      ,iv.[BusinessKey]
      ,iv.[Notes]
      ,iv.Title
      ,rc.ReportingPeriod ReportCycle
      ,i.ShortName
      ,i.Code
      ,i.LongName
      ,null [VerifiedActualValue] -- not in table
      ,null [VerifiedActualNotes] -- not in table

      ,i.[IndicatorType_ID]
      ,i.[Activity_ID]
      ,i.[SubOutput_ID]
	  ,i.IndicatorID Indicator_ID
      ,ISNULL([DataVersion_ID],0) DataVersion_ID
      ,i.[Sharepoint_ID]
      ,ISNULL(iv.Location_ID,1) Location_ID
      ,iv.IndicatorStatusPercent      
         
      ,/*ISNULL(iv.ReportCycleDate_ID,*/ rc.StartDateID/*)*/ ReportCycleDate_ID
         
                     ,i.BaselineDate
      ,BaselineDate_ID = (YEAR(i.BaselineDate) * 10000)  + (MONTH(i.BaselineDate) * 100) + DAY(i.BaselineDate)
      ,i.TargetDate
       ,TargetDate_ID = (YEAR(i.TargetDate) * 10000)  + (MONTH(i.TargetDate) * 100) + DAY(i.TargetDate)
            ,RolledUpToOutcome_ID = ISNULL(i.outcomeID, o.outcomeid)
      ,RolledUpToOutput_ID = ISNULL(i.output_id, so.output_ID)
      ,RolledUpToSubOutput_ID = i.suboutput_id
      ,RolledUpToActivity_ID = i.activity_ID
          ,TermSetID = DIML.TermsetDeepGrainID
	,i.Baseline OriginalBaseline
	,i.Target Target2014
	,rc.StartDateID ReportingPeriodStartDate_ID
	,rc.EndDateID ReportingPeriodEndDate_ID	
	,null NextReportingPeriodReleaseDate_ID
	
	
	, ParentMDX =  
	CASE WHEN i.OutcomeID IS Not NULL 
	THEN '[Outcome].[Outcome].[' + CAST (i.OutcomeID  as varchar(8)) + ']'
	
	WHEN i.Output_ID IS Not NULL 
	THEN '[Output].[Output].[' + CAST (i.Output_ID as varchar(8))  + ']'
	
	WHEN i.SubOutput_ID IS Not NULL 
	THEN '[Sub Output].[Sub Output].[' + CAST (i.SubOutput_ID as varchar(8)) + ']'
	END 
  FROM app.Indicator i 
  INNER JOIN DimIndicatorMultiLevel DIML
  On i.IndicatorID = DIML.Indicator_ID
  INNER JOIN Core.ReportingPeriod rc
  on 

  rc.StartDateID Between i.BaselineDate_ID and i.TargetDate_ID -- needs to be checked
  
  LEFT join RBM.[IndicatorValues] iv
  on i.IndicatorID = iv.Indicator_ID
    and iv.ReportPeriodID = rc.ReportingPeriod  
LEFT OUTER JOIN app.Activity a
on i.Activity_ID = a.ActivityID
LEFT OUTER JOIN app.SubOutput SO

/*	INNER JOIN dbo.Activity SOA
	on so.SubOutput_ID = soa.SubOutput_ID
	inner join dbo.Milestone AM
		on SOA.Activity_ID = AM.Activity_ID

*/
on i.SubOutput_ID = so.SubOutput_ID 
--OR a. .SubOutputID = so.SubOutput_ID
	

LEFT OUTER JOIN app.Output o
on i.Output_ID = o.Output_ID
OR so.Output_ID = o.Output_ID

LEFT OUTER JOIN app.Outcome om
on i.OutcomeID = om.OutcomeID
OR o.OutcomeID = om.OutcomeID -- needs to follow convention


LEFT JOIN Core.DimDate DDStart
on rc.StartDateID = DDStart.DateID

LEFT JOIN Core.DimDate DDEnd
on rc.EndDateID = DDEnd.DateID

--LEFT JOIN Core.DimDate DDNext
--on iv.NextReportingPeriodReleaseDate_ID = DDNext.DateKey

LEFT JOIN Core.Location  L
on iv.Location_ID = L.Location_ID



where i.ShortName not like '%overall%'
AND  (ISNULL(i.outcomeID, o.outcomeid) = @OutcomeID OR @OutcomeID = 0 )
and (i.IsKeyIndicator = @KeyIndicator  or @KeyIndicator = 0)
AND (iv.DataVersion_ID = @DataVersionID OR @DataVersionID = 0 OR iv.DataVersion_ID is null)
AND (iv.Location_ID = @LocationID OR @LocationID = 0 OR iv.Location_ID IS NULL)
AND (iv.IndicatorValues_ID IS NOT NULL OR @IncludeExtrapolatedTargetDates =1)
--ORDER BY i.Code
 ) SRC


--where Code = 'STP8.1.4D1'
ORDER BY Code, ReportCycleDate_ID

*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [Core].[sp_IndicatorCaptureProgress]...';


GO



ALTER PROC [Core].[sp_IndicatorCaptureProgress]
@@DataVersion_ID int
,@@Outcome_ID int

, @Location_ID int =1
, @MilestoneCode varchar(255) = '0'
AS

/*

Select 
		(OC.Code + ' : ' + OC.LongName) as Outcome
		,oc.OutcomeID as Outcome_ID
		,(OTP.Code + ' : ' + OTP.LongName) as [Output]
		,otp.Output_ID
		,(STP.Code + ' : ' + STP.LongName) as SubOutput
		,stp.SubOutput_ID
		,(ACT.Code + ' : ' + ACT.LongName) as Activity
		,act.ActivityID as Activity_ID
		,(MST.Code + ' : ' + MST.LongName) as Indicator
		,mst.IndicatorID as Indicator_ID
			,LEFT(RC.YearNumber,4 ) Year
			,RCC.YearNumber as FinancialYear
			,rcC.ReportingPeriod as ReportCycle
			,MSV.DataVersion_ID
			,(Case when MSV.IndicatorStatusPercent Is not null 
				then 1
				else 0
			end)   PercentageCaptured
			,MSV.IndicatorStatusPercent as IndicatorProgressPercent
			,OC.OutcomeID as RolledUpToOutcome_ID
			,OTP.Output_ID as RolledUpToOutput_ID
			,STP.SubOutput_ID as RolledUpToSubOutput_ID
			,MSv.ActualDate as ReportingDate
from app.outcome oc
	Left join app.Output OTP on OC.OutcomeID = OTP.OutcomeID
	Left join app.SubOutput STP on OTP.Output_ID = STP.Output_ID
	Left join app.Activity ACT on stp.SubOutput_ID = ACT.SubOutput_ID
	Left join app.Indicator MST on 
	(act.ActivityID = mst.Activity_ID or 
	stp.SubOutput_ID = MST.SubOutput_ID or
	OTP.Output_ID = MST.Output_ID or
	OC.OutcomeID = MST.OutcomeID)


	Left Outer Join RBM.IndicatorValues MSV on MSV.Indicator_ID=MST.IndicatorID
	inner Join Core.ReportCycle RC on MST.TargetDate_ID Between RC.StartDateID and rc.EndDateID 
	Left Join Core.ReportCycle RCC on rc.YearNumber=RCC.YearNumber
	
Where OC.OutcomeID = @@Outcome_ID and MSV.DataVersion_ID=@@DataVersion_ID


order by (OC.Code + ' : ' + OC.LongName)
      ,(OTP.Code + ' : ' + OTP.LongName)
      ,(STP.Code + ' : ' + STP.LongName)
      ,(ACT.Code + ' : ' + ACT.LongName)
      ,(MST.Code + ' : ' + MST.LongName)
      ,RCC.YearNumber
      ,rCc.ReportingPeriod
      






	  */
	  SELECT 'Not implemented' as X
GO
PRINT N'Altering [Core].[sp_MilestoneCaptureProgress]...';


GO



ALTER PROC [Core].[sp_MilestoneCaptureProgress]
@@DataVersion_ID int
,@@Outcome_ID int

, @Location_ID int =1
, @MilestoneCode varchar(255) = '0'
AS
/*



Select 
		(OC.Code + ' : ' + OC.LongName) as Outcome
		,oc.OutcomeID as Outcome_ID
		,(OTP.Code + ' : ' + OTP.LongName) as [Output]
		,otp.Output_ID
		,(STP.Code + ' : ' + STP.LongName) as SubOutput
		,stp.SubOutput_ID
		,(ACT.Code + ' : ' + ACT.LongName) as Activity
		,act.ActivityID as Activity_ID
		,(MST.Code + ' : ' + MST.LongName) as Milestone
		,mst.MilestoneID as Milestone_ID
			,LEFT(RC.YearNumber,4 ) Year
			,RC.YearNumber as FinancialYear
			,rc.ReportingPeriod as ReportCycle
			,MSV.DataVersion_ID
			,(Case when (MSV.MilestoneStatusPercent Is not null )
				then 1
				else 0
			end)   PercentageCaptured
			,MSV.MilestoneStatusPercent as MilestoneProgressPercent
			,OC.OutcomeID as RolledUpToOutcome_ID
			,OTP.Output_ID as RolledUpToOutput_ID
			,STP.SubOutput_ID as RolledUpToSubOutput_ID
			,MSv.ActualDate as ReportingDate
from app.outcome oc
	inner join app.Output OTP on OC.OutcomeID = OTP.OutcomeID
	inner join app.SubOutput STP on OTP.Output_ID = STP.Output_ID
	inner join app.Activity ACT on stp.SubOutput_ID = ACT.SubOutput_ID
	inner join app.Milestone MST on act.ActivityID = mst.ActivityID
	Left Outer Join RBM.MilestoneValues MSV on MSV.Milestone_ID=MST.MilestoneID
	inner Join Core.ReportCycle RC on MST.TargetDateID Between RC.StartDateID and rc.EndDateID 
	
Where OC.OutcomeID = @@Outcome_ID and MSV.DataVersion_ID=@@DataVersion_ID


order by (OC.Code + ' : ' + OC.LongName)
      ,(OTP.Code + ' : ' + OTP.LongName)
      ,(STP.Code + ' : ' + STP.LongName)
      ,(ACT.Code + ' : ' + ACT.LongName)
      ,(MST.Code + ' : ' + MST.LongName)
      ,RC.YearNumber
      ,rc.ReportingPeriod
      
	  */
	  SELECT 'Not implemented' as X
GO
PRINT N'Altering [dbo].[rptActivityStatus]...';


GO

ALTER PROC [dbo].[rptActivityStatus]
( @OutcomeID int ,
@ReportingPeriodID int)
as

/*
SELECT 
	OM.ShortName as OutcomeName
	,PR.ShortName as OutputName
	,ACT.ShortName As Suboutputname
	,OMIV.IndicatorStatusPercent OutcomeStatus
	,OPIV.IndicatorStatusPercent OutputStatus
	,SOIV.IndicatorStatusPercent SubOutputStatus
			
FROM app.Outcome OM 
	INNER JOIN app.Indicator OmI 
	ON OM.OutcomeID = OMI.OutcomeID
		AND OMI.IndicatorType_ID = 6
	Inner JOIN app.Output OP
		ON OM.OutcomeID = PR.OutcomeID 
	
	INNER JOIN RBM.IndicatorValues OMIV
		ON OMI.IndicatorID = OMIV.Indicator_ID
		
	INNER JOIN app.Indicator OPI 
	ON PR.Output_ID = OPI.Output_ID 
	 AND OPI.IndicatorType_ID = 6

	 
	INNER JOIN RBM.IndicatorValues OPIV
		ON OPI.IndicatorID = OPIV.Indicator_ID

	INNER JOIN app.SubOutput SO
		ON PR.Output_ID = ACT.Output_ID
	 INNER JOIN app.Indicator SOI 
	ON ACT.SubOutput_ID = SOI.SubOutput_ID 
	 AND SOI.IndicatorType_ID = 6

	 
	INNER JOIN RBM.IndicatorValues SOIV
		ON SOI.IndicatorID = SOIV.Indicator_ID

	WHERE (OM.OutcomeID = @OutcomeID 
			OR @OutcomeID = 0)
		AND
			(
				OMIV.ReportPeriodID = @ReportingPeriodID
				AND 
				OPIV.ReportPeriodID = @ReportingPeriodID
				AND 
				SOIV.ReportPeriodID = @ReportingPeriodID
			)
			*/
			
SELECT 
	OM.ShortName as OutcomeName
	,PR.ShortName as ProjectName
	,ACT.ShortName As ActivityName
	,CASE 
	WHEN OMI.OutcomeID IS NOT NULL
		THEN OMIV.IndicatorStatusPercent 
		ELSE NULL 
		END OutcomeStatus
		,CASE 
	WHEN OPP.projectID IS NOT NULL
		THEN OPIV.IndicatorStatusPercent 
		ELSE NULL 
		END ProjectStatus
	,CASE
	WHEN SOI.Activity_ID IS NOT NULL
		THEN SOIV.IndicatorStatusPercent 
		ELSE NULL 
		END ActivityStatus
	
			
FROM app.Outcome OM 
	INNER JOIN app.Indicator OmI 
	ON OM.OutcomeID = OMI.OutcomeID
		AND OMI.IndicatorType_ID = 6
	Inner JOIN app.Project PR
		ON OM.OutcomeID = PR.OutcomeID 
	
	INNER JOIN RBM.IndicatorValues OMIV
		ON OMI.IndicatorID = OMIV.Indicator_ID
		
	INNER JOIN app.Indicator OPP 
	ON PR.ProjectID = OPP.Output_ID 
	 AND OPP.IndicatorType_ID = 6

	 
	INNER JOIN RBM.IndicatorValues OPIV
		ON OPP.IndicatorID = OPIV.Indicator_ID

	INNER JOIN app.Activity ACT
		ON PR.projectID = ACT.projectID
	 INNER JOIN app.Indicator SOI 
	 /* MGS Fixed */
	ON ACT.ActivityID = SOI.Activity_ID 
	 AND SOI.IndicatorType_ID = 6

	 
	INNER JOIN RBM.IndicatorValues SOIV
		ON SOI.IndicatorID = SOIV.Indicator_ID

	WHERE (OM.OutcomeID = @OutcomeID 
			OR @OutcomeID = 0)
		AND
			(
				OMIV.ReportPeriodID = @ReportingPeriodID
				AND 
				OPIV.ReportPeriodID = @ReportingPeriodID
				AND 
				SOIV.ReportPeriodID = @ReportingPeriodID
			)
GO
PRINT N'Altering [Core].[uspModIndicatorValue]...';


GO


-- =============================================
-- Author:		Andreas Bergstedt
-- Create date: 2013-03-24
-- Description:	Procedure to insert or update Indicator Value table
-- =============================================
ALTER PROCEDURE [Core].[uspModIndicatorValue]

	-- Add the parameters for the stored procedure here
	@CRUD nvarchar(5),   -- C=Create,R=Read,U=Update,D=Delete
	@IndicatorValues_ID int ,
	@Indicator_ID as [int]  ,
	@BaselineLabel as [varchar](50)  ,
	@BaselineValue as [decimal](20, 5) ,
	@BaselineString as [varchar](max) ,
	@BaselineDate as [date] ,
	@TargetLabel as [varchar](50)  ,
	@TargetValue as [decimal](20, 5) ,
	@TargetValueString as [varchar](max) ,
	@TargetDate as [date] ,
	@ActualLabel as [varchar](50)  ,
	@ActualValue as [decimal](20, 5) ,
	@ActualValueString as [varchar](max) ,
	@ActualDate as [date] ,
	@BusinessKey as [varchar](max) ,
	@Notes as [varchar](max) ,
	@VerifiedActualValue as [decimal](20, 5) ,
	@VerifiedActualNotes as [varchar](max) ,
	@DataVersion_ID as [int]  ,
	@Location_ID as [int]  ,
	@IndicatorStatusPercent as [decimal](18, 2) ,
	@ReportPeriodID as [int]  ,
	@Title as [varchar](255) ,
	@ModifiedDate as [datetime] ,
	@Organization_ID as [int] ,
	@Username as [varchar](255) 

AS
/*BEGIN
	
	SET NOCOUNT ON;
	--Generate Memory Table for Merge
IF @CRUD in ('C','U')
	Begin
	Declare @@TTin as Table(
	[IndicatorValues_ID] [int]  NOT NULL,
	[Indicator_ID] [int] NOT NULL,
	[BaselineLabel] [varchar](50) NOT NULL,
	[BaselineValue] [decimal](20, 5) NULL,
	[BaselineString] [varchar](max) NULL,
	[BaselineDate] [date] NULL,
	[TargetLabel] [varchar](50) NOT NULL,
	[TargetValue] [decimal](20, 5) NULL,
	[TargetValueString] [varchar](max) NULL,
	[TargetDate] [date] NULL,
	[ActualLabel] [varchar](50) NOT NULL,
	[ActualValue] [decimal](20, 5) NULL,
	[ActualValueString] [varchar](max) NULL,
	[ActualDate] [date] NULL,
	[BusinessKey] [varchar](max) NULL,
	[Notes] [varchar](max) NULL,
	[VerifiedActualValue] [decimal](20, 5) NULL,
	[VerifiedActualNotes] [varchar](max) NULL,
	[DataVersion_ID] [int] NOT NULL,
	[Location_ID] [int] NOT NULL,
	[IndicatorStatusPercent] [decimal](18, 2) NULL,
	[ReportPeriodID] [int] NOT NULL,
	[Title] [varchar](255) NULL,
	[ModifiedDate] [datetime] NULL,
	[Organization_ID] [int] NULL,
	[Username] [varchar](255) NULL,
	[sys_CreatedOn] [datetime] NOT NULL,
	[sys_CreatedBy] [nvarchar](255) NOT NULL,
	[sys_ModifiedOn] [datetime] NOT NULL,
	[sys_ModifiedBy] [nvarchar](255) NOT NULL,
	[sys_Active] [int] NOT NULL)
    

	--Insert Parameter Values in temp Table
	
	Insert Into @@TTin
	Select 
	@IndicatorValues_ID,
	@Indicator_ID
      ,@BaselineLabel
      ,@BaselineValue
      ,@BaselineString
      ,@BaselineDate
      ,@TargetLabel
      ,@TargetValue
      ,@TargetValueString
      ,@TargetDate
      ,@ActualLabel
      ,@ActualValue
      ,@ActualValueString
      ,@ActualDate
      ,@BusinessKey
      ,@Notes
      ,@VerifiedActualValue
      ,@VerifiedActualNotes
      ,@DataVersion_ID
      ,@Location_ID
      ,@IndicatorStatusPercent
      ,@ReportPeriodID
      ,@Title
      ,@ModifiedDate
      ,@Organization_ID
      ,@Username
      ,GetUTCDate()--@sys_CreatedOn
      ,''--@sys_CreatedBy
      ,GetUTCDate()--@sys_ModifiedOn
      ,''--@sys_ModifiedBy
      ,1--@sys_Active
	  
	  	--Execute Mege into Live
	Merge Into RBM.IndicatorValues as T
	USING @@TTin as S
	ON  s.IndicatorValues_ID=t.IndicatorValues_ID 
	When MATCHED 
	Then UPDATE
	
	Set 
	t.[Indicator_ID]=s.[Indicator_ID],
/*t.[BaselineLabel]=s.[BaselineLabel],
t.[BaselineValue]=s.[BaselineValue],
t.[BaselineString]=s.[BaselineString],
t.[BaselineDate]=s.[BaselineDate],
t.[TargetLabel]=s.[TargetLabel],
t.[TargetValue]=s.[TargetValue],
t.[TargetValueString]=s.[TargetValueString],
t.[TargetDate]=s.[TargetDate],*/
t.[ActualLabel]=s.[ActualLabel],
t.[ActualValue]=s.[ActualValue],
t.[ActualValueString]=s.[ActualValueString],
t.[ActualDate]=s.[ActualDate],
t.[BusinessKey]=s.[BusinessKey],
t.[Notes]=s.[Notes],
/*t.[VerifiedActualValue]=s.[VerifiedActualValue],
t.[VerifiedActualNotes]=s.[VerifiedActualNotes],*/
t.[DataVersion_ID]=s.[DataVersion_ID],
t.[Location_ID]=s.[Location_ID],
t.[IndicatorStatusPercent]=s.[IndicatorStatusPercent],
t.[ReportPeriodID]=s.[ReportPeriodID],
t.[Title]=s.[Title],
t.[ModifiedDate]=s.[ModifiedDate],
t.[Organization_ID]=s.[Organization_ID],
t.[Username]=s.[Username],
--t.[sys_CreatedOn]=s.[sys_CreatedOn],
--t.[sys_CreatedBy]=s.[sys_CreatedBy],
t.[sys_ModifiedOn]=s.[sys_ModifiedOn],
t.[sys_ModifiedBy]=s.[sys_ModifiedBy]


	WHEN NOT MATCHED Then Insert

	(
	[Indicator_ID]
/*,[BaselineLabel]
,[BaselineValue]
,[BaselineString]
,[BaselineDate]
,[TargetLabel]
,[TargetValue]
,[TargetValueString]
,[TargetDate]*/
,[ActualLabel]
,[ActualValue]
,[ActualValueString]
,[ActualDate]
,[BusinessKey]
,[Notes]
/*,[VerifiedActualValue]
,[VerifiedActualNotes]*/
,[DataVersion_ID]
,[Location_ID]
,[IndicatorStatusPercent]
,[ReportPeriodID]
,[Title]
,[ModifiedDate]
,[Organization_ID]
,[Username]
,[sys_CreatedOn]
,[sys_CreatedBy]
,[sys_ModifiedOn]
,[sys_ModifiedBy]
,[sys_Active]
 

	)
	Values
	(
s.[Indicator_ID],
s.[BaselineLabel],
s.[BaselineValue],
s.[BaselineString],
s.[BaselineDate],
s.[TargetLabel],
s.[TargetValue],
s.[TargetValueString],
s.[TargetDate],
s.[ActualLabel],
s.[ActualValue],
s.[ActualValueString],
s.[ActualDate],
s.[BusinessKey],
s.[Notes],
s.[VerifiedActualValue],
s.[VerifiedActualNotes],
s.[DataVersion_ID],
s.[Location_ID],
s.[IndicatorStatusPercent],
s.[ReportPeriodID],
s.[Title],
s.[ModifiedDate],
s.[Organization_ID],
s.[Username],
s.[sys_CreatedOn],
s.[sys_CreatedBy],
s.[sys_ModifiedOn],
s.[sys_ModifiedBy],
s.[sys_Active]


	);
End

IF @CRUD Like 'R'
Begin 
--Return Result
Select * from RBM.IndicatorValues s where s.IndicatorValues_ID=@IndicatorValues_ID
End
IF @CRUD Like 'D'
Begin 

Update RBM.IndicatorValues  
Set Sys_Active = -1 -- 1 = Active 0=Not Active -1=Deleted
where IndicatorValues_ID=@IndicatorValues_ID
End




END


*/
SELECT 'Not implemented' as X
GO
PRINT N'Altering [Core].[uspModMilestoneValue]...';


GO


-- =============================================
-- Author:		Andreas Bergstedt
-- Create date: 2013-03-24
-- Description:	Procedure to insert or update Milestone Value table
-- =============================================
ALTER PROCEDURE [Core].[uspModMilestoneValue]
	-- Add the parameters for the stored procedure here
	@CRUD nvarchar(5),   -- C=Create,R=Read,U=Update,D=Delete
	@MilestoneValues_ID int ,
	@Milestone_ID as [int]  ,
	@BaselineLabel as [varchar](50)  ,
	@BaselineValue as [decimal](20, 5) ,
	@BaselineString as [varchar](max) ,
	@BaselineDate as [date] ,
	@TargetLabel as [varchar](50)  ,
	@TargetValue as [decimal](20, 5) ,
	@TargetValueString as [varchar](max) ,
	@TargetDate as [date] ,
	@ActualLabel as [varchar](50)  ,
	@ActualValue as [decimal](20, 5) ,
	@ActualValueString as [varchar](max) ,
	@ActualDate as [date] ,
	@BusinessKey as [varchar](max) ,
	@Notes as [varchar](max) ,
	@VerifiedActualValue as [decimal](20, 5) ,
	@VerifiedActualNotes as [varchar](max) ,
	@DataVersion_ID as [int]  ,
	@Location_ID as [int]  ,
	@MilestoneStatusPercent as [decimal](18, 2) ,
	@ReportPeriodID as [int]  ,
	@Title as [varchar](255) ,
	@ModifiedDate as [datetime] ,
	@Organization_ID as [int] ,
	@Username as [varchar](255) 

AS
/*
BEGIN
	
	SET NOCOUNT ON;
	--Generate Memory Table for Merge
IF @CRUD in ('C','U')
	Begin
	Declare @@TTin as Table(
	[MilestoneValues_ID] [int]  NOT NULL,
	[Milestone_ID] [int] NOT NULL,
	[BaselineLabel] [varchar](50) NOT NULL,
	[BaselineValue] [decimal](20, 5) NULL,
	[BaselineString] [varchar](max) NULL,
	[BaselineDate] [date] NULL,
	[TargetLabel] [varchar](50) NOT NULL,
	[TargetValue] [decimal](20, 5) NULL,
	[TargetValueString] [varchar](max) NULL,
	[TargetDate] [date] NULL,
	[ActualLabel] [varchar](50) NOT NULL,
	[ActualValue] [decimal](20, 5) NULL,
	[ActualValueString] [varchar](max) NULL,
	[ActualDate] [date] NULL,
	[BusinessKey] [varchar](max) NULL,
	[Notes] [varchar](max) NULL,
	[VerifiedActualValue] [decimal](20, 5) NULL,
	[VerifiedActualNotes] [varchar](max) NULL,
	[DataVersion_ID] [int] NOT NULL,
	[Location_ID] [int] NOT NULL,
	[MilestoneStatusPercent] [decimal](18, 2) NULL,
	[ReportPeriodID] [int] NOT NULL,
	[Title] [varchar](255) NULL,
	[ModifiedDate] [datetime] NULL,
	[Organization_ID] [int] NULL,
	[Username] [varchar](255) NULL,
	[sys_CreatedOn] [datetime] NOT NULL,
	[sys_CreatedBy] [nvarchar](255) NOT NULL,
	[sys_ModifiedOn] [datetime] NOT NULL,
	[sys_ModifiedBy] [nvarchar](255) NOT NULL,
	[sys_Active] [int] NOT NULL)
    

	--Insert Parameter Values in temp Table
	
	Insert Into @@TTin
	Select 
	@MilestoneValues_ID,
	@Milestone_ID
      ,@BaselineLabel
      ,@BaselineValue
      ,@BaselineString
      ,@BaselineDate
      ,@TargetLabel
      ,@TargetValue
      ,@TargetValueString
      ,@TargetDate
      ,@ActualLabel
      ,@ActualValue
      ,@ActualValueString
      ,@ActualDate
      ,@BusinessKey
      ,@Notes
      ,@VerifiedActualValue
      ,@VerifiedActualNotes
      ,@DataVersion_ID
      ,@Location_ID
      ,@MilestoneStatusPercent
      ,@ReportPeriodID
      ,@Title
      ,@ModifiedDate
      ,@Organization_ID
      ,@Username
      ,GetUTCDate()--@sys_CreatedOn
      ,''--@sys_CreatedBy
      ,GetUTCDate()--@sys_ModifiedOn
      ,''--@sys_ModifiedBy
      ,1--@sys_Active
	  
	  	--Execute Mege into Live
	Merge Into RBM.MilestoneValues as T
	USING @@TTin as S
	ON  s.MilestoneValues_ID=t.MilestoneValues_ID 
	When MATCHED 
	Then UPDATE
	
	Set 
	t.[Milestone_ID]=s.[Milestone_ID],
/*t.[BaselineLabel]=s.[BaselineLabel],
t.[BaselineValue]=s.[BaselineValue],
t.[BaselineString]=s.[BaselineString],
t.[BaselineDate]=s.[BaselineDate],
t.[TargetLabel]=s.[TargetLabel],
t.[TargetValue]=s.[TargetValue],
t.[TargetValueString]=s.[TargetValueString],
t.[TargetDate]=s.[TargetDate],*/
t.[ActualLabel]=s.[ActualLabel],
t.[ActualValue]=s.[ActualValue],
t.[ActualValueString]=s.[ActualValueString],
t.[ActualDate]=s.[ActualDate],
t.[BusinessKey]=s.[BusinessKey],
t.[Notes]=s.[Notes],
t.[VerifiedActualValue]=s.[VerifiedActualValue],
t.[VerifiedActualNotes]=s.[VerifiedActualNotes],
t.[DataVersion_ID]=s.[DataVersion_ID],
t.[Location_ID]=s.[Location_ID],
t.[MilestoneStatusPercent]=s.[MilestoneStatusPercent],
t.[ReportPeriodID]=s.[ReportPeriodID],
t.[Title]=s.[Title],
t.[ModifiedDate]=s.[ModifiedDate],
t.[Organization_ID]=s.[Organization_ID],
t.[Username]=s.[Username],
--t.[sys_CreatedOn]=s.[sys_CreatedOn],
--t.[sys_CreatedBy]=s.[sys_CreatedBy],
t.[sys_ModifiedOn]=s.[sys_ModifiedOn],
t.[sys_ModifiedBy]=s.[sys_ModifiedBy]


	WHEN NOT MATCHED Then Insert

	(
	[Milestone_ID]
,[BaselineLabel]
,[BaselineValue]
,[BaselineString]
,[BaselineDate]
,[TargetLabel]
,[TargetValue]
,[TargetValueString]
,[TargetDate]
,[ActualLabel]
,[ActualValue]
,[ActualValueString]
,[ActualDate]
,[BusinessKey]
,[Notes]
,[VerifiedActualValue]
,[VerifiedActualNotes]
,[DataVersion_ID]
,[Location_ID]
,[MilestoneStatusPercent]
,[ReportPeriodID]
,[Title]
,[ModifiedDate]
,[Organization_ID]
,[Username]
,[sys_CreatedOn]
,[sys_CreatedBy]
,[sys_ModifiedOn]
,[sys_ModifiedBy]
,[sys_Active]
 

	)
	Values
	(
s.[Milestone_ID],
s.[BaselineLabel],
s.[BaselineValue],
s.[BaselineString],
s.[BaselineDate],
s.[TargetLabel],
s.[TargetValue],
s.[TargetValueString],
s.[TargetDate],
s.[ActualLabel],
s.[ActualValue],
s.[ActualValueString],
s.[ActualDate],
s.[BusinessKey],
s.[Notes],
s.[VerifiedActualValue],
s.[VerifiedActualNotes],
s.[DataVersion_ID],
s.[Location_ID],
s.[MilestoneStatusPercent],
s.[ReportPeriodID],
s.[Title],
s.[ModifiedDate],
s.[Organization_ID],
s.[Username],
s.[sys_CreatedOn],
s.[sys_CreatedBy],
s.[sys_ModifiedOn],
s.[sys_ModifiedBy],
s.[sys_Active]


	);
End

IF @CRUD Like 'R'
Begin 
--Return Result
Select * from RBM.MilestoneValues s where s.MilestoneValues_ID=@MilestoneValues_ID
End
IF @CRUD Like 'D'
Begin 

Update RBM.MilestoneValues  
Set Sys_Active = -1 -- 1 = Active 0=Not Active -1=Deleted
where MilestoneValues_ID=@MilestoneValues_ID
End




END
*/
SELECT 'Not implemented' as X
GO
PRINT N'Refreshing [dbo].[uspActivityProgress]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[uspActivityProgress]';


GO
PRINT N'Refreshing [dbo].[uspIndicatorTimeline]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[uspIndicatorTimeline]';


GO
PRINT N'Refreshing [dbo].[uspIndicatorsList_MDXKey_PublicSite]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[uspIndicatorsList_MDXKey_PublicSite]';


GO
PRINT N'Refreshing [dbo].[uspMilestoneProgress]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[uspMilestoneProgress]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [app].[Activity] WITH CHECK CHECK CONSTRAINT [FK_Activity_Project];


GO
PRINT N'Update complete.';


GO
