

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Status : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Status entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Status()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Status(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Status> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Status.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int StatusID
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.StatusID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongName
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.LongName);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.LongName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TextDescription
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.TextDescription);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.TextDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IndicatorID
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.IndicatorID);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.IndicatorID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ProjectID
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> PeriodID
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.PeriodID);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.PeriodID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PeriodID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PeriodID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PeriodID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> Sharepoint_ID
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Sharepoint_ID);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Sharepoint_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sharepoint_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sharepoint_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sharepoint_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Percentage
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Percentage);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Percentage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Percentage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Percentage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Percentage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> RobotIndicator
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.RobotIndicator);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.RobotIndicator, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RobotIndicator_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RobotIndicator_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RobotIndicator_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BusinessKey
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.BusinessKey);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.BusinessKey, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Code
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Code);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Code, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Activity Activity
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Activity);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Activity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Outcome Outcome
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Outcome);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Outcome, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcome_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcome_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcome_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Output Output
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Output);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Output, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Output_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Output_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Output_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SubOutput SubOutput
        {
            get
            {
                return global::LightSwitchApplication.Status.DetailsClass.GetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.SubOutput);
            }
            set
            {
                global::LightSwitchApplication.Status.DetailsClass.SetValue(this, global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.SubOutput, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Status,
                global::LightSwitchApplication.Status.DetailsClass,
                global::LightSwitchApplication.Status.DetailsClass.IImplementation,
                global::LightSwitchApplication.Status.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.StatusID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>.Entry
                __StatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>.Entry(
                    global::LightSwitchApplication.Status.DetailsClass.__Status_CreateNew,
                    global::LightSwitchApplication.Status.DetailsClass.__Status_Created,
                    global::LightSwitchApplication.Status.DetailsClass.__Status_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Status __Status_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Status> es)
            {
                return new global::LightSwitchApplication.Status(es);
            }
            private static void __Status_Created(global::LightSwitchApplication.Status e)
            {
                e.Status_Created();
            }
            private static bool __Status_AllowSaveWithErrors(global::LightSwitchApplication.Status e)
            {
                bool result = false;
                e.Status_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Status.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, int> StatusID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.StatusID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> LongName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.LongName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> TextDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.TextDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>> IndicatorID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.IndicatorID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>> PeriodID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.PeriodID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<global::System.Guid>> Sharepoint_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Sharepoint_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<decimal>> Percentage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Percentage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>> RobotIndicator
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.RobotIndicator) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> BusinessKey
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.BusinessKey) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> Code
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Code) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Activity> Activity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Activity) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Outcome> Outcome
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Outcome) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Outcome>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Output> Output
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Output) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Output>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.SubOutput> SubOutput
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.SubOutput) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.SubOutput>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int StatusID { get; }
                new string LongName { get; set; }
                new string TextDescription { get; set; }
                new global::System.Nullable<int> IndicatorID { get; set; }
                new global::System.Nullable<int> ProjectID { get; set; }
                new global::System.Nullable<int> PeriodID { get; set; }
                new global::System.Nullable<global::System.Guid> Sharepoint_ID { get; set; }
                new global::System.Nullable<decimal> Percentage { get; set; }
                new global::System.Nullable<int> RobotIndicator { get; set; }
                new string BusinessKey { get; set; }
                new string Notes { get; set; }
                new string Code { get; set; }
                new string sys_CreatedBy { get; set; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new string sys_ModifiedBy { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Activity { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Outcome { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Output { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SubOutput { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, int>.Entry
                    StatusID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, int>.Entry(
                        "StatusID",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._StatusID_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._StatusID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._StatusID_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._StatusID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._StatusID_OnValueChanged);
                private static void _StatusID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, int>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusID, sf);
                }
                private static bool _StatusID_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.StatusID_IsReadOnly(ref result);
                    return result;
                }
                private static void _StatusID_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusID_Validate(r);
                }
                private static int _StatusID_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.StatusID;
                }
                private static void _StatusID_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.StatusID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    LongName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "LongName",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._LongName_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._LongName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._LongName_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._LongName_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._LongName_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._LongName_OnValueChanged);
                private static void _LongName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._LongName, sf);
                }
                private static bool _LongName_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.LongName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongName_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongName_Validate(r);
                }
                private static string _LongName_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.LongName;
                }
                private static void _LongName_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongName = v;
                }
                private static void _LongName_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.LongName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    TextDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "TextDescription",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._TextDescription_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._TextDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._TextDescription_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._TextDescription_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._TextDescription_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._TextDescription_OnValueChanged);
                private static void _TextDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._TextDescription, sf);
                }
                private static bool _TextDescription_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.TextDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _TextDescription_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TextDescription_Validate(r);
                }
                private static string _TextDescription_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.TextDescription;
                }
                private static void _TextDescription_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TextDescription = v;
                }
                private static void _TextDescription_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.TextDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry
                    IndicatorID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IndicatorID",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._IndicatorID_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._IndicatorID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._IndicatorID_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._IndicatorID_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._IndicatorID_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._IndicatorID_OnValueChanged);
                private static void _IndicatorID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorID, sf);
                }
                private static bool _IndicatorID_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.IndicatorID_IsReadOnly(ref result);
                    return result;
                }
                private static void _IndicatorID_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IndicatorID_Validate(r);
                }
                private static global::System.Nullable<int> _IndicatorID_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorID;
                }
                private static void _IndicatorID_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IndicatorID = v;
                }
                private static void _IndicatorID_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.IndicatorID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static global::System.Nullable<int> _ProjectID_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry
                    PeriodID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry(
                        "PeriodID",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._PeriodID_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._PeriodID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._PeriodID_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._PeriodID_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._PeriodID_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._PeriodID_OnValueChanged);
                private static void _PeriodID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._PeriodID, sf);
                }
                private static bool _PeriodID_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.PeriodID_IsReadOnly(ref result);
                    return result;
                }
                private static void _PeriodID_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PeriodID_Validate(r);
                }
                private static global::System.Nullable<int> _PeriodID_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.PeriodID;
                }
                private static void _PeriodID_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.PeriodID = v;
                }
                private static void _PeriodID_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.PeriodID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    Sharepoint_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "Sharepoint_ID",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Sharepoint_ID_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Sharepoint_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Sharepoint_ID_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Sharepoint_ID_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Sharepoint_ID_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Sharepoint_ID_OnValueChanged);
                private static void _Sharepoint_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Sharepoint_ID, sf);
                }
                private static bool _Sharepoint_ID_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Sharepoint_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sharepoint_ID_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sharepoint_ID_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _Sharepoint_ID_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Sharepoint_ID;
                }
                private static void _Sharepoint_ID_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.Sharepoint_ID = v;
                }
                private static void _Sharepoint_ID_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Sharepoint_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Percentage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Percentage",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Percentage_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Percentage_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Percentage_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Percentage_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Percentage_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Percentage_OnValueChanged);
                private static void _Percentage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Percentage, sf);
                }
                private static bool _Percentage_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Percentage_IsReadOnly(ref result);
                    return result;
                }
                private static void _Percentage_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Percentage_Validate(r);
                }
                private static global::System.Nullable<decimal> _Percentage_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Percentage;
                }
                private static void _Percentage_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Percentage = v;
                }
                private static void _Percentage_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Percentage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry
                    RobotIndicator = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Entry(
                        "RobotIndicator",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._RobotIndicator_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._RobotIndicator_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._RobotIndicator_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._RobotIndicator_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._RobotIndicator_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._RobotIndicator_OnValueChanged);
                private static void _RobotIndicator_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._RobotIndicator, sf);
                }
                private static bool _RobotIndicator_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.RobotIndicator_IsReadOnly(ref result);
                    return result;
                }
                private static void _RobotIndicator_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RobotIndicator_Validate(r);
                }
                private static global::System.Nullable<int> _RobotIndicator_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.RobotIndicator;
                }
                private static void _RobotIndicator_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.RobotIndicator = v;
                }
                private static void _RobotIndicator_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.RobotIndicator_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    BusinessKey = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "BusinessKey",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._BusinessKey_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._BusinessKey_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._BusinessKey_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._BusinessKey_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._BusinessKey_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._BusinessKey_OnValueChanged);
                private static void _BusinessKey_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._BusinessKey, sf);
                }
                private static bool _BusinessKey_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.BusinessKey_IsReadOnly(ref result);
                    return result;
                }
                private static void _BusinessKey_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BusinessKey_Validate(r);
                }
                private static string _BusinessKey_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.BusinessKey;
                }
                private static void _BusinessKey_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BusinessKey = v;
                }
                private static void _BusinessKey_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.BusinessKey_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    Code = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "Code",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Code_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Code_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Code_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Code_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Code_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Code_OnValueChanged);
                private static void _Code_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Code, sf);
                }
                private static bool _Code_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Code_IsReadOnly(ref result);
                    return result;
                }
                private static void _Code_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Code_Validate(r);
                }
                private static string _Code_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Code;
                }
                private static void _Code_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Code = v;
                }
                private static void _Code_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Code_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.Status.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.Status.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.ActiveType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    Activity = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "Activity",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_GetCoreImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_Refresh,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Activity_OnValueChanged);
                private static void _Activity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Activity, sf);
                }
                private static bool _Activity_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Activity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Activity_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Activity_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Activity_GetCoreImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Activity;
                }
                private static global::LightSwitchApplication.Activity _Activity_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::LightSwitchApplication.Activity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Activity, ref d._Activity, (i, ev) => i.Activity = ev, v);
                }
                private static void _Activity_Refresh(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Activity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Outcome>.Entry
                    Outcome = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Outcome>.Entry(
                        "Outcome",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_GetCoreImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_Refresh,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Outcome_OnValueChanged);
                private static void _Outcome_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Outcome>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Outcome, sf);
                }
                private static bool _Outcome_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Outcome_IsReadOnly(ref result);
                    return result;
                }
                private static void _Outcome_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Outcome_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Outcome_GetCoreImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Outcome;
                }
                private static global::LightSwitchApplication.Outcome _Outcome_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Outcome, global::LightSwitchApplication.Outcome.DetailsClass>(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Outcome, ref d._Outcome);
                }
                private static void _Outcome_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::LightSwitchApplication.Outcome v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Outcome, ref d._Outcome, (i, ev) => i.Outcome = ev, v);
                }
                private static void _Outcome_Refresh(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Outcome, ref d._Outcome);
                }
                private static void _Outcome_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Outcome_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Output>.Entry
                    Output = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Output>.Entry(
                        "Output",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_GetCoreImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_Refresh,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._Output_OnValueChanged);
                private static void _Output_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Output>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._Output, sf);
                }
                private static bool _Output_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.Output_IsReadOnly(ref result);
                    return result;
                }
                private static void _Output_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Output_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Output_GetCoreImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.Output;
                }
                private static global::LightSwitchApplication.Output _Output_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Output, global::LightSwitchApplication.Output.DetailsClass>(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Output, ref d._Output);
                }
                private static void _Output_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::LightSwitchApplication.Output v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Output, ref d._Output, (i, ev) => i.Output = ev, v);
                }
                private static void _Output_Refresh(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.Output, ref d._Output);
                }
                private static void _Output_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.Output_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.SubOutput>.Entry
                    SubOutput = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.SubOutput>.Entry(
                        "SubOutput",
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_Stub,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_ComputeIsReadOnly,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_Validate,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_GetCoreImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_GetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_SetImplementationValue,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_Refresh,
                        global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties._SubOutput_OnValueChanged);
                private static void _SubOutput_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Status.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.SubOutput>.Data> c, global::LightSwitchApplication.Status.DetailsClass d, object sf)
                {
                    c(d, ref d._SubOutput, sf);
                }
                private static bool _SubOutput_ComputeIsReadOnly(global::LightSwitchApplication.Status e)
                {
                    bool result = false;
                    e.SubOutput_IsReadOnly(ref result);
                    return result;
                }
                private static void _SubOutput_Validate(global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SubOutput_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SubOutput_GetCoreImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.ImplementationEntity.SubOutput;
                }
                private static global::LightSwitchApplication.SubOutput _SubOutput_GetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SubOutput, global::LightSwitchApplication.SubOutput.DetailsClass>(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput);
                }
                private static void _SubOutput_SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass d, global::LightSwitchApplication.SubOutput v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput, (i, ev) => i.SubOutput = ev, v);
                }
                private static void _SubOutput_Refresh(global::LightSwitchApplication.Status.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Status.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput);
                }
                private static void _SubOutput_OnValueChanged(global::LightSwitchApplication.Status e)
                {
                    e.SubOutput_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, int>.Data _StatusID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _LongName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _TextDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data _IndicatorID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data _PeriodID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _Sharepoint_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<decimal>>.Data _Percentage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.Nullable<int>>.Data _RobotIndicator;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _BusinessKey;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _Code;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Activity>.Data _Activity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Outcome>.Data _Outcome;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.Output>.Data _Output;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Status, global::LightSwitchApplication.Status.DetailsClass, global::LightSwitchApplication.SubOutput>.Data _SubOutput;
            
        }
    
        #endregion
    }
    
    #endregion
}
