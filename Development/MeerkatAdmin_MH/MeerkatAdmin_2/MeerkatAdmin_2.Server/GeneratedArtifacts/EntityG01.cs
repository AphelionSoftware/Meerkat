

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Activity : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Activity entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Activity()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Activity(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Activity> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Activity.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ActivityID
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActivityID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortName
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ShortName);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ShortName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongName
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.LongName);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.LongName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TextDescription
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.TextDescription);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.TextDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Code
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Code);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Code, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ActivityType_ID
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActivityType_ID);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActivityType_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Indicator> Indicators
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Indicators);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Indicator> IndicatorsQuery
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetQuery(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Indicators);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Milestone> Milestones
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Milestones);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Milestone> MilestonesQuery
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetQuery(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Milestones);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SubOutput SubOutput
        {
            get
            {
                return global::LightSwitchApplication.Activity.DetailsClass.GetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.SubOutput);
            }
            set
            {
                global::LightSwitchApplication.Activity.DetailsClass.SetValue(this, global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.SubOutput, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Activity,
                global::LightSwitchApplication.Activity.DetailsClass,
                global::LightSwitchApplication.Activity.DetailsClass.IImplementation,
                global::LightSwitchApplication.Activity.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActivityID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>.Entry
                __ActivityEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>.Entry(
                    global::LightSwitchApplication.Activity.DetailsClass.__Activity_CreateNew,
                    global::LightSwitchApplication.Activity.DetailsClass.__Activity_Created,
                    global::LightSwitchApplication.Activity.DetailsClass.__Activity_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Activity __Activity_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Activity> es)
            {
                return new global::LightSwitchApplication.Activity(es);
            }
            private static void __Activity_Created(global::LightSwitchApplication.Activity e)
            {
                e.Activity_Created();
            }
            private static bool __Activity_AllowSaveWithErrors(global::LightSwitchApplication.Activity e)
            {
                bool result = false;
                e.Activity_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Activity.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, int> ActivityID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActivityID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string> ShortName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ShortName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string> LongName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.LongName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string> TextDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.TextDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string> Code
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Code) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.Nullable<int>> ActivityType_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActivityType_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Indicator> Indicators
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Indicators) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Indicator>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Milestone> Milestones
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Milestones) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Milestone>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.SubOutput> SubOutput
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.SubOutput) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.SubOutput>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ActivityID { get; }
                new string ShortName { get; set; }
                new string LongName { get; set; }
                new string TextDescription { get; set; }
                new string sys_CreatedBy { get; set; }
                new string sys_ModifiedBy { get; set; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new string Code { get; set; }
                new global::System.Nullable<int> ActivityType_ID { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
                new global::System.Collections.IEnumerable Indicators { get; }
                new global::System.Collections.IEnumerable Milestones { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SubOutput { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, int>.Entry
                    ActivityID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, int>.Entry(
                        "ActivityID",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityID_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityID_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityID_OnValueChanged);
                private static void _ActivityID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, int>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityID, sf);
                }
                private static bool _ActivityID_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.ActivityID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityID_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityID_Validate(r);
                }
                private static int _ActivityID_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityID;
                }
                private static void _ActivityID_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.ActivityID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry
                    ShortName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry(
                        "ShortName",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ShortName_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ShortName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ShortName_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ShortName_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ShortName_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ShortName_OnValueChanged);
                private static void _ShortName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortName, sf);
                }
                private static bool _ShortName_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.ShortName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortName_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortName_Validate(r);
                }
                private static string _ShortName_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortName;
                }
                private static void _ShortName_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortName = v;
                }
                private static void _ShortName_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.ShortName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry
                    LongName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry(
                        "LongName",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._LongName_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._LongName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._LongName_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._LongName_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._LongName_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._LongName_OnValueChanged);
                private static void _LongName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._LongName, sf);
                }
                private static bool _LongName_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.LongName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongName_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongName_Validate(r);
                }
                private static string _LongName_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.LongName;
                }
                private static void _LongName_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongName = v;
                }
                private static void _LongName_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.LongName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry
                    TextDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry(
                        "TextDescription",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._TextDescription_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._TextDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._TextDescription_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._TextDescription_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._TextDescription_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._TextDescription_OnValueChanged);
                private static void _TextDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._TextDescription, sf);
                }
                private static bool _TextDescription_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.TextDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _TextDescription_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TextDescription_Validate(r);
                }
                private static string _TextDescription_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.TextDescription;
                }
                private static void _TextDescription_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TextDescription = v;
                }
                private static void _TextDescription_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.TextDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.Activity.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.Activity.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry
                    Code = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Entry(
                        "Code",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Code_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Code_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Code_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Code_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Code_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Code_OnValueChanged);
                private static void _Code_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._Code, sf);
                }
                private static bool _Code_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.Code_IsReadOnly(ref result);
                    return result;
                }
                private static void _Code_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Code_Validate(r);
                }
                private static string _Code_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.Code;
                }
                private static void _Code_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Code = v;
                }
                private static void _Code_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.Code_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.Nullable<int>>.Entry
                    ActivityType_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ActivityType_ID",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityType_ID_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityType_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityType_ID_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityType_ID_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityType_ID_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActivityType_ID_OnValueChanged);
                private static void _ActivityType_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityType_ID, sf);
                }
                private static bool _ActivityType_ID_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.ActivityType_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityType_ID_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityType_ID_Validate(r);
                }
                private static global::System.Nullable<int> _ActivityType_ID_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityType_ID;
                }
                private static void _ActivityType_ID_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ActivityType_ID = v;
                }
                private static void _ActivityType_ID_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.ActivityType_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.Project_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Indicator>.Entry
                    Indicators = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Indicator>.Entry(
                        "Indicators",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Indicators_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Indicators_GetReferencedEntities,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Indicators_GetEntityCollection);
                private static void _Indicators_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Indicator>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._Indicators, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Indicator> _Indicators_GetReferencedEntities(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Indicators, ref d._Indicators);
                }
                private static global::System.Collections.IEnumerable _Indicators_GetEntityCollection(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.Indicators;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Milestone>.Entry
                    Milestones = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Milestone>.Entry(
                        "Milestones",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Milestones_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Milestones_GetReferencedEntities,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._Milestones_GetEntityCollection);
                private static void _Milestones_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Milestone>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._Milestones, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Milestone> _Milestones_GetReferencedEntities(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Milestone, global::LightSwitchApplication.Milestone.DetailsClass>(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.Milestones, ref d._Milestones);
                }
                private static global::System.Collections.IEnumerable _Milestones_GetEntityCollection(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.Milestones;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.ActiveType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.SubOutput>.Entry
                    SubOutput = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.SubOutput>.Entry(
                        "SubOutput",
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_Stub,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_ComputeIsReadOnly,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_Validate,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_GetCoreImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_GetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_SetImplementationValue,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_Refresh,
                        global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties._SubOutput_OnValueChanged);
                private static void _SubOutput_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Activity.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.SubOutput>.Data> c, global::LightSwitchApplication.Activity.DetailsClass d, object sf)
                {
                    c(d, ref d._SubOutput, sf);
                }
                private static bool _SubOutput_ComputeIsReadOnly(global::LightSwitchApplication.Activity e)
                {
                    bool result = false;
                    e.SubOutput_IsReadOnly(ref result);
                    return result;
                }
                private static void _SubOutput_Validate(global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SubOutput_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SubOutput_GetCoreImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.ImplementationEntity.SubOutput;
                }
                private static global::LightSwitchApplication.SubOutput _SubOutput_GetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SubOutput, global::LightSwitchApplication.SubOutput.DetailsClass>(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput);
                }
                private static void _SubOutput_SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass d, global::LightSwitchApplication.SubOutput v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput, (i, ev) => i.SubOutput = ev, v);
                }
                private static void _SubOutput_Refresh(global::LightSwitchApplication.Activity.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Activity.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput);
                }
                private static void _SubOutput_OnValueChanged(global::LightSwitchApplication.Activity e)
                {
                    e.SubOutput_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, int>.Data _ActivityID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data _ShortName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data _LongName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data _TextDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, string>.Data _Code;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::System.Nullable<int>>.Data _ActivityType_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Indicator>.Data _Indicators;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.Milestone>.Data _Milestones;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass, global::LightSwitchApplication.SubOutput>.Data _SubOutput;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Indicator : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Indicator entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Indicator()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Indicator(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Indicator> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Indicator.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicator_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicator_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IndicatorID
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongName
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.LongName);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.LongName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TextDescription
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TextDescription);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TextDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TextDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Baseline
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Baseline);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Baseline, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Baseline_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Baseline_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Baseline_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BaselineString
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineString);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineString, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineString_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineString_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineString_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime BaselineDate
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineDate);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Target
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Target);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Target, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Target_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Target_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Target_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TargetString
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetString);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetString, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetString_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetString_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetString_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TargetDate
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetDate);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ReleaseDate
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ReleaseDate);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ReleaseDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ReportingDate
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ReportingDate);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ReportingDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BusinessKey
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BusinessKey);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BusinessKey, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Code
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Code);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Code, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortName
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ShortName);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ShortName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> BaselineDate_ID
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineDate_ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineDate_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineDate_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaselineDate_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TargetDate_ID
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetDate_ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string updated
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.updated);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.updated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void updated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void updated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void updated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsKeyIndicator
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IsKeyIndicator);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IsKeyIndicator, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsKeyIndicator_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsKeyIndicator_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsKeyIndicator_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UnitOfMeasure
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.UnitOfMeasure);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.UnitOfMeasure, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasure_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasure_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasure_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> Sharepoint_ID
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Sharepoint_ID);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Sharepoint_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sharepoint_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sharepoint_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sharepoint_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> projectID
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.projectID);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.projectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void projectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void projectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void projectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Activity Activity
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Activity);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Activity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IndicatorType IndicatorType
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorType);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Outcome Outcome
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Outcome);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Outcome, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcome_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcome_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcome_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Output Output
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Output);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Output, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Output_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Output_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Output_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SubOutput SubOutput
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.SubOutput);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.SubOutput, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutput_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.IndicatorLocation> IndicatorLocations
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorLocations);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IndicatorLocation> IndicatorLocationsQuery
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetQuery(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorLocations);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.IndicatorValue> IndicatorValues
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorValues);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IndicatorValue> IndicatorValuesQuery
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetQuery(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorValues);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.Indicator.DetailsClass.GetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.Indicator.DetailsClass.SetValue(this, global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Indicator,
                global::LightSwitchApplication.Indicator.DetailsClass,
                global::LightSwitchApplication.Indicator.DetailsClass.IImplementation,
                global::LightSwitchApplication.Indicator.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>.Entry
                __IndicatorEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>.Entry(
                    global::LightSwitchApplication.Indicator.DetailsClass.__Indicator_CreateNew,
                    global::LightSwitchApplication.Indicator.DetailsClass.__Indicator_Created,
                    global::LightSwitchApplication.Indicator.DetailsClass.__Indicator_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Indicator __Indicator_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Indicator> es)
            {
                return new global::LightSwitchApplication.Indicator(es);
            }
            private static void __Indicator_Created(global::LightSwitchApplication.Indicator e)
            {
                e.Indicator_Created();
            }
            private static bool __Indicator_AllowSaveWithErrors(global::LightSwitchApplication.Indicator e)
            {
                bool result = false;
                e.Indicator_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Indicator.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, int> IndicatorID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> LongName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.LongName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> TextDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TextDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>> Baseline
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Baseline) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> BaselineString
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineString) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime> BaselineDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>> Target
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Target) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> TargetString
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetString) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime> TargetDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>> ReleaseDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ReleaseDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>> ReportingDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ReportingDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> BusinessKey
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BusinessKey) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> Code
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Code) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> ShortName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ShortName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>> BaselineDate_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.BaselineDate_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>> TargetDate_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.TargetDate_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> updated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.updated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, bool> IsKeyIndicator
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IsKeyIndicator) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> UnitOfMeasure
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.UnitOfMeasure) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.Guid>> Sharepoint_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Sharepoint_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>> projectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.projectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Activity> Activity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Activity) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorType> IndicatorType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Outcome> Outcome
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Outcome) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Outcome>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Output> Output
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Output) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Output>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.SubOutput> SubOutput
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.SubOutput) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.SubOutput>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorLocation> IndicatorLocations
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorLocations) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorLocation>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorValue> IndicatorValues
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorValues) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorValue>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int IndicatorID { get; }
                new string LongName { get; set; }
                new string TextDescription { get; set; }
                new global::System.Nullable<decimal> Baseline { get; set; }
                new string BaselineString { get; set; }
                new global::System.DateTime BaselineDate { get; set; }
                new global::System.Nullable<decimal> Target { get; set; }
                new string TargetString { get; set; }
                new global::System.DateTime TargetDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ReleaseDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ReportingDate { get; set; }
                new string BusinessKey { get; set; }
                new string Notes { get; set; }
                new string Code { get; set; }
                new string ShortName { get; set; }
                new global::System.Nullable<int> BaselineDate_ID { get; }
                new global::System.Nullable<int> TargetDate_ID { get; }
                new string updated { get; set; }
                new bool IsKeyIndicator { get; set; }
                new string UnitOfMeasure { get; set; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new string sys_CreatedBy { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new string sys_ModifiedBy { get; set; }
                new global::System.Nullable<global::System.Guid> Sharepoint_ID { get; set; }
                new global::System.Nullable<int> projectID { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Activity { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation IndicatorType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Outcome { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Output { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SubOutput { get; set; }
                new global::System.Collections.IEnumerable IndicatorLocations { get; }
                new global::System.Collections.IEnumerable IndicatorValues { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, int>.Entry
                    IndicatorID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, int>.Entry(
                        "IndicatorID",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorID_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorID_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorID_OnValueChanged);
                private static void _IndicatorID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, int>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorID, sf);
                }
                private static bool _IndicatorID_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.IndicatorID_IsReadOnly(ref result);
                    return result;
                }
                private static void _IndicatorID_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IndicatorID_Validate(r);
                }
                private static int _IndicatorID_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorID;
                }
                private static void _IndicatorID_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.IndicatorID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    LongName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "LongName",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._LongName_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._LongName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._LongName_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._LongName_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._LongName_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._LongName_OnValueChanged);
                private static void _LongName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._LongName, sf);
                }
                private static bool _LongName_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.LongName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongName_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongName_Validate(r);
                }
                private static string _LongName_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.LongName;
                }
                private static void _LongName_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongName = v;
                }
                private static void _LongName_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.LongName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    TextDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "TextDescription",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TextDescription_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TextDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TextDescription_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TextDescription_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TextDescription_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TextDescription_OnValueChanged);
                private static void _TextDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._TextDescription, sf);
                }
                private static bool _TextDescription_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.TextDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _TextDescription_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TextDescription_Validate(r);
                }
                private static string _TextDescription_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.TextDescription;
                }
                private static void _TextDescription_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TextDescription = v;
                }
                private static void _TextDescription_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.TextDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Baseline = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Baseline",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Baseline_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Baseline_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Baseline_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Baseline_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Baseline_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Baseline_OnValueChanged);
                private static void _Baseline_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Baseline, sf);
                }
                private static bool _Baseline_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Baseline_IsReadOnly(ref result);
                    return result;
                }
                private static void _Baseline_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Baseline_Validate(r);
                }
                private static global::System.Nullable<decimal> _Baseline_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Baseline;
                }
                private static void _Baseline_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Baseline = v;
                }
                private static void _Baseline_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Baseline_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    BaselineString = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "BaselineString",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineString_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineString_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineString_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineString_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineString_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineString_OnValueChanged);
                private static void _BaselineString_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._BaselineString, sf);
                }
                private static bool _BaselineString_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.BaselineString_IsReadOnly(ref result);
                    return result;
                }
                private static void _BaselineString_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BaselineString_Validate(r);
                }
                private static string _BaselineString_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.BaselineString;
                }
                private static void _BaselineString_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BaselineString = v;
                }
                private static void _BaselineString_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.BaselineString_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry
                    BaselineDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry(
                        "BaselineDate",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_OnValueChanged);
                private static void _BaselineDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._BaselineDate, sf);
                }
                private static bool _BaselineDate_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.BaselineDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _BaselineDate_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BaselineDate_Validate(r);
                }
                private static global::System.DateTime _BaselineDate_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.BaselineDate;
                }
                private static void _BaselineDate_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.BaselineDate = global::LightSwitchApplication.Indicator.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _BaselineDate_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.BaselineDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Target = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Target",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Target_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Target_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Target_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Target_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Target_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Target_OnValueChanged);
                private static void _Target_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Target, sf);
                }
                private static bool _Target_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Target_IsReadOnly(ref result);
                    return result;
                }
                private static void _Target_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Target_Validate(r);
                }
                private static global::System.Nullable<decimal> _Target_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Target;
                }
                private static void _Target_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Target = v;
                }
                private static void _Target_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Target_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    TargetString = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "TargetString",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetString_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetString_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetString_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetString_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetString_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetString_OnValueChanged);
                private static void _TargetString_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetString, sf);
                }
                private static bool _TargetString_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.TargetString_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetString_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetString_Validate(r);
                }
                private static string _TargetString_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetString;
                }
                private static void _TargetString_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TargetString = v;
                }
                private static void _TargetString_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.TargetString_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry
                    TargetDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry(
                        "TargetDate",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_OnValueChanged);
                private static void _TargetDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetDate, sf);
                }
                private static bool _TargetDate_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.TargetDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetDate_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetDate_Validate(r);
                }
                private static global::System.DateTime _TargetDate_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetDate;
                }
                private static void _TargetDate_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TargetDate = global::LightSwitchApplication.Indicator.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _TargetDate_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.TargetDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ReleaseDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ReleaseDate",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReleaseDate_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReleaseDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReleaseDate_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReleaseDate_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReleaseDate_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReleaseDate_OnValueChanged);
                private static void _ReleaseDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._ReleaseDate, sf);
                }
                private static bool _ReleaseDate_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.ReleaseDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReleaseDate_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReleaseDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ReleaseDate_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.ReleaseDate;
                }
                private static void _ReleaseDate_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ReleaseDate = global::LightSwitchApplication.Indicator.DetailsClass.TruncateDate(v);
                }
                private static void _ReleaseDate_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.ReleaseDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ReportingDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ReportingDate",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReportingDate_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReportingDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReportingDate_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReportingDate_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReportingDate_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ReportingDate_OnValueChanged);
                private static void _ReportingDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportingDate, sf);
                }
                private static bool _ReportingDate_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.ReportingDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportingDate_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportingDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ReportingDate_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportingDate;
                }
                private static void _ReportingDate_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ReportingDate = global::LightSwitchApplication.Indicator.DetailsClass.TruncateDate(v);
                }
                private static void _ReportingDate_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.ReportingDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    BusinessKey = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "BusinessKey",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BusinessKey_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BusinessKey_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BusinessKey_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BusinessKey_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BusinessKey_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BusinessKey_OnValueChanged);
                private static void _BusinessKey_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._BusinessKey, sf);
                }
                private static bool _BusinessKey_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.BusinessKey_IsReadOnly(ref result);
                    return result;
                }
                private static void _BusinessKey_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BusinessKey_Validate(r);
                }
                private static string _BusinessKey_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.BusinessKey;
                }
                private static void _BusinessKey_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BusinessKey = v;
                }
                private static void _BusinessKey_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.BusinessKey_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    Code = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "Code",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Code_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Code_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Code_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Code_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Code_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Code_OnValueChanged);
                private static void _Code_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Code, sf);
                }
                private static bool _Code_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Code_IsReadOnly(ref result);
                    return result;
                }
                private static void _Code_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Code_Validate(r);
                }
                private static string _Code_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Code;
                }
                private static void _Code_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Code = v;
                }
                private static void _Code_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Code_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    ShortName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "ShortName",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ShortName_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ShortName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ShortName_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ShortName_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ShortName_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ShortName_OnValueChanged);
                private static void _ShortName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortName, sf);
                }
                private static bool _ShortName_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.ShortName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortName_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortName_Validate(r);
                }
                private static string _ShortName_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortName;
                }
                private static void _ShortName_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortName = v;
                }
                private static void _ShortName_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.ShortName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Entry
                    BaselineDate_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Entry(
                        "BaselineDate_ID",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_ID_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_ID_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._BaselineDate_ID_OnValueChanged);
                private static void _BaselineDate_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._BaselineDate_ID, sf);
                }
                private static bool _BaselineDate_ID_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.BaselineDate_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _BaselineDate_ID_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BaselineDate_ID_Validate(r);
                }
                private static global::System.Nullable<int> _BaselineDate_ID_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.BaselineDate_ID;
                }
                private static void _BaselineDate_ID_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.BaselineDate_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Entry
                    TargetDate_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TargetDate_ID",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_ID_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_ID_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._TargetDate_ID_OnValueChanged);
                private static void _TargetDate_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetDate_ID, sf);
                }
                private static bool _TargetDate_ID_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.TargetDate_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetDate_ID_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetDate_ID_Validate(r);
                }
                private static global::System.Nullable<int> _TargetDate_ID_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetDate_ID;
                }
                private static void _TargetDate_ID_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.TargetDate_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    updated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "updated",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._updated_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._updated_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._updated_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._updated_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._updated_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._updated_OnValueChanged);
                private static void _updated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._updated, sf);
                }
                private static bool _updated_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.updated_IsReadOnly(ref result);
                    return result;
                }
                private static void _updated_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.updated_Validate(r);
                }
                private static string _updated_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.updated;
                }
                private static void _updated_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.updated = v;
                }
                private static void _updated_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.updated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, bool>.Entry
                    IsKeyIndicator = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, bool>.Entry(
                        "IsKeyIndicator",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IsKeyIndicator_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IsKeyIndicator_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IsKeyIndicator_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IsKeyIndicator_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IsKeyIndicator_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IsKeyIndicator_OnValueChanged);
                private static void _IsKeyIndicator_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._IsKeyIndicator, sf);
                }
                private static bool _IsKeyIndicator_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.IsKeyIndicator_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsKeyIndicator_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsKeyIndicator_Validate(r);
                }
                private static bool _IsKeyIndicator_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.IsKeyIndicator;
                }
                private static void _IsKeyIndicator_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsKeyIndicator = v;
                }
                private static void _IsKeyIndicator_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.IsKeyIndicator_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    UnitOfMeasure = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "UnitOfMeasure",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._UnitOfMeasure_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._UnitOfMeasure_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._UnitOfMeasure_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._UnitOfMeasure_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._UnitOfMeasure_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._UnitOfMeasure_OnValueChanged);
                private static void _UnitOfMeasure_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._UnitOfMeasure, sf);
                }
                private static bool _UnitOfMeasure_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.UnitOfMeasure_IsReadOnly(ref result);
                    return result;
                }
                private static void _UnitOfMeasure_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UnitOfMeasure_Validate(r);
                }
                private static string _UnitOfMeasure_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.UnitOfMeasure;
                }
                private static void _UnitOfMeasure_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UnitOfMeasure = v;
                }
                private static void _UnitOfMeasure_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.UnitOfMeasure_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.Indicator.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.Indicator.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    Sharepoint_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "Sharepoint_ID",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Sharepoint_ID_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Sharepoint_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Sharepoint_ID_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Sharepoint_ID_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Sharepoint_ID_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Sharepoint_ID_OnValueChanged);
                private static void _Sharepoint_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Sharepoint_ID, sf);
                }
                private static bool _Sharepoint_ID_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Sharepoint_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sharepoint_ID_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sharepoint_ID_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _Sharepoint_ID_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Sharepoint_ID;
                }
                private static void _Sharepoint_ID_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.Sharepoint_ID = v;
                }
                private static void _Sharepoint_ID_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Sharepoint_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Entry
                    projectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Entry(
                        "projectID",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._projectID_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._projectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._projectID_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._projectID_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._projectID_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._projectID_OnValueChanged);
                private static void _projectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._projectID, sf);
                }
                private static bool _projectID_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.projectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _projectID_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.projectID_Validate(r);
                }
                private static global::System.Nullable<int> _projectID_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.projectID;
                }
                private static void _projectID_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.projectID = v;
                }
                private static void _projectID_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.projectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    Activity = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "Activity",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_GetCoreImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_Refresh,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Activity_OnValueChanged);
                private static void _Activity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Activity, sf);
                }
                private static bool _Activity_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Activity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Activity_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Activity_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Activity_GetCoreImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Activity;
                }
                private static global::LightSwitchApplication.Activity _Activity_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::LightSwitchApplication.Activity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Activity, ref d._Activity, (i, ev) => i.Activity = ev, v);
                }
                private static void _Activity_Refresh(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Activity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorType>.Entry
                    IndicatorType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorType>.Entry(
                        "IndicatorType",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_Refresh,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorType_OnValueChanged);
                private static void _IndicatorType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorType>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorType, sf);
                }
                private static bool _IndicatorType_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.IndicatorType_IsReadOnly(ref result);
                    return result;
                }
                private static void _IndicatorType_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IndicatorType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _IndicatorType_GetCoreImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorType;
                }
                private static global::LightSwitchApplication.IndicatorType _IndicatorType_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.IndicatorType, global::LightSwitchApplication.IndicatorType.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorType, ref d._IndicatorType);
                }
                private static void _IndicatorType_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::LightSwitchApplication.IndicatorType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorType, ref d._IndicatorType, (i, ev) => i.IndicatorType = ev, v);
                }
                private static void _IndicatorType_Refresh(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorType, ref d._IndicatorType);
                }
                private static void _IndicatorType_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.IndicatorType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Outcome>.Entry
                    Outcome = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Outcome>.Entry(
                        "Outcome",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_GetCoreImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_Refresh,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Outcome_OnValueChanged);
                private static void _Outcome_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Outcome>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Outcome, sf);
                }
                private static bool _Outcome_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Outcome_IsReadOnly(ref result);
                    return result;
                }
                private static void _Outcome_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Outcome_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Outcome_GetCoreImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Outcome;
                }
                private static global::LightSwitchApplication.Outcome _Outcome_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Outcome, global::LightSwitchApplication.Outcome.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Outcome, ref d._Outcome);
                }
                private static void _Outcome_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::LightSwitchApplication.Outcome v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Outcome, ref d._Outcome, (i, ev) => i.Outcome = ev, v);
                }
                private static void _Outcome_Refresh(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Outcome, ref d._Outcome);
                }
                private static void _Outcome_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Outcome_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Output>.Entry
                    Output = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Output>.Entry(
                        "Output",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_GetCoreImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_Refresh,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._Output_OnValueChanged);
                private static void _Output_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Output>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._Output, sf);
                }
                private static bool _Output_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.Output_IsReadOnly(ref result);
                    return result;
                }
                private static void _Output_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Output_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Output_GetCoreImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.Output;
                }
                private static global::LightSwitchApplication.Output _Output_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Output, global::LightSwitchApplication.Output.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Output, ref d._Output);
                }
                private static void _Output_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::LightSwitchApplication.Output v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Output, ref d._Output, (i, ev) => i.Output = ev, v);
                }
                private static void _Output_Refresh(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.Output, ref d._Output);
                }
                private static void _Output_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.Output_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.SubOutput>.Entry
                    SubOutput = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.SubOutput>.Entry(
                        "SubOutput",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_GetCoreImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_Refresh,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._SubOutput_OnValueChanged);
                private static void _SubOutput_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.SubOutput>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._SubOutput, sf);
                }
                private static bool _SubOutput_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.SubOutput_IsReadOnly(ref result);
                    return result;
                }
                private static void _SubOutput_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SubOutput_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SubOutput_GetCoreImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.SubOutput;
                }
                private static global::LightSwitchApplication.SubOutput _SubOutput_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SubOutput, global::LightSwitchApplication.SubOutput.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput);
                }
                private static void _SubOutput_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::LightSwitchApplication.SubOutput v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput, (i, ev) => i.SubOutput = ev, v);
                }
                private static void _SubOutput_Refresh(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.SubOutput, ref d._SubOutput);
                }
                private static void _SubOutput_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.SubOutput_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorLocation>.Entry
                    IndicatorLocations = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorLocation>.Entry(
                        "IndicatorLocations",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorLocations_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorLocations_GetReferencedEntities,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorLocations_GetEntityCollection);
                private static void _IndicatorLocations_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorLocation>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorLocations, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IndicatorLocation> _IndicatorLocations_GetReferencedEntities(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.IndicatorLocation, global::LightSwitchApplication.IndicatorLocation.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorLocations, ref d._IndicatorLocations);
                }
                private static global::System.Collections.IEnumerable _IndicatorLocations_GetEntityCollection(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorLocations;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorValue>.Entry
                    IndicatorValues = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorValue>.Entry(
                        "IndicatorValues",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorValues_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorValues_GetReferencedEntities,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._IndicatorValues_GetEntityCollection);
                private static void _IndicatorValues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorValue>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorValues, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IndicatorValue> _IndicatorValues_GetReferencedEntities(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.IndicatorValues, ref d._IndicatorValues);
                }
                private static global::System.Collections.IEnumerable _IndicatorValues_GetEntityCollection(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorValues;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Indicator.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.Indicator.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.Indicator e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.Indicator.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Indicator.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.Indicator e)
                {
                    e.ActiveType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, int>.Data _IndicatorID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _LongName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _TextDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Data _Baseline;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _BaselineString;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data _BaselineDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<decimal>>.Data _Target;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _TargetString;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data _TargetDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ReleaseDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ReportingDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _BusinessKey;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _Code;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _ShortName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Data _BaselineDate_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Data _TargetDate_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _updated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, bool>.Data _IsKeyIndicator;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _UnitOfMeasure;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _Sharepoint_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::System.Nullable<int>>.Data _projectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Activity>.Data _Activity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorType>.Data _IndicatorType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Outcome>.Data _Outcome;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.Output>.Data _Output;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.SubOutput>.Data _SubOutput;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorLocation>.Data _IndicatorLocations;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.IndicatorValue>.Data _IndicatorValues;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
        }
    
        #endregion
    }
    
    #endregion
}
