

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class IndicatorValue : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the IndicatorValue entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public IndicatorValue()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public IndicatorValue(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.IndicatorValue> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.IndicatorValue.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValue_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IndicatorValues_ID
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorValues_ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActualLabel
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualLabel);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualLabel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualLabel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualLabel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualLabel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ActualValue
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualValue);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActualValueString
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualValueString);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualValueString, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualValueString_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualValueString_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualValueString_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualDate
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualDate);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ReleaseDate
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReleaseDate);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReleaseDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ReportingDate
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingDate);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> IndicatorReportingDate
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorReportingDate);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorReportingDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorReportingDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorReportingDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorReportingDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BusinessKey
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.BusinessKey);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.BusinessKey, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessKey_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> IndicatorStatusPercent
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorStatusPercent);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorStatusPercent, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorStatusPercent_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorStatusPercent_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorStatusPercent_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ModifiedDate);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ModifiedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Username
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Username);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Username, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Username_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Username_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Username_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.DataVersion DataVersion
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.DataVersion);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.DataVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Indicator Indicator
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Indicator);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Indicator, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicator_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicator_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicator_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Location Location
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Organization Organization
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Organization);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Organization, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organization_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organization_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organization_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ReportingPeriod ReportingPeriod
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingPeriod);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingPeriod, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriod_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriod_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriod_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.IndicatorValue.DetailsClass.GetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.IndicatorValue.DetailsClass.SetValue(this, global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.IndicatorValue,
                global::LightSwitchApplication.IndicatorValue.DetailsClass,
                global::LightSwitchApplication.IndicatorValue.DetailsClass.IImplementation,
                global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorValues_ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>.Entry
                __IndicatorValueEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>.Entry(
                    global::LightSwitchApplication.IndicatorValue.DetailsClass.__IndicatorValue_CreateNew,
                    global::LightSwitchApplication.IndicatorValue.DetailsClass.__IndicatorValue_Created,
                    global::LightSwitchApplication.IndicatorValue.DetailsClass.__IndicatorValue_AllowSaveWithErrors);
            private static global::LightSwitchApplication.IndicatorValue __IndicatorValue_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.IndicatorValue> es)
            {
                return new global::LightSwitchApplication.IndicatorValue(es);
            }
            private static void __IndicatorValue_Created(global::LightSwitchApplication.IndicatorValue e)
            {
                e.IndicatorValue_Created();
            }
            private static bool __IndicatorValue_AllowSaveWithErrors(global::LightSwitchApplication.IndicatorValue e)
            {
                bool result = false;
                e.IndicatorValue_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, int> IndicatorValues_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorValues_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> ActualLabel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualLabel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>> ActualValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> ActualValueString
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualValueString) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActualDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>> ReleaseDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReleaseDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>> ReportingDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>> IndicatorReportingDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorReportingDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> BusinessKey
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.BusinessKey) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>> IndicatorStatusPercent
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.IndicatorStatusPercent) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ModifiedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> Username
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Username) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.DataVersion> DataVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.DataVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.DataVersion>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Indicator> Indicator
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Indicator) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Indicator>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Location> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Location>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Organization> Organization
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Organization) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Organization>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ReportingPeriod> ReportingPeriod
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingPeriod) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ReportingPeriod>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int IndicatorValues_ID { get; }
                new string ActualLabel { get; set; }
                new global::System.Nullable<decimal> ActualValue { get; set; }
                new string ActualValueString { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ReleaseDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ReportingDate { get; set; }
                new global::System.Nullable<global::System.DateTime> IndicatorReportingDate { get; set; }
                new string BusinessKey { get; set; }
                new string Notes { get; set; }
                new global::System.Nullable<decimal> IndicatorStatusPercent { get; set; }
                new string Title { get; set; }
                new global::System.Nullable<global::System.DateTime> ModifiedDate { get; set; }
                new string Username { get; set; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new string sys_CreatedBy { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new string sys_ModifiedBy { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation DataVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Indicator { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Location { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Organization { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ReportingPeriod { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, int>.Entry
                    IndicatorValues_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, int>.Entry(
                        "IndicatorValues_ID",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorValues_ID_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorValues_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorValues_ID_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorValues_ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorValues_ID_OnValueChanged);
                private static void _IndicatorValues_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, int>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorValues_ID, sf);
                }
                private static bool _IndicatorValues_ID_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.IndicatorValues_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _IndicatorValues_ID_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IndicatorValues_ID_Validate(r);
                }
                private static int _IndicatorValues_ID_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorValues_ID;
                }
                private static void _IndicatorValues_ID_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.IndicatorValues_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    ActualLabel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "ActualLabel",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualLabel_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualLabel_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualLabel_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualLabel_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualLabel_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualLabel_OnValueChanged);
                private static void _ActualLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualLabel, sf);
                }
                private static bool _ActualLabel_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ActualLabel_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualLabel_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualLabel_Validate(r);
                }
                private static string _ActualLabel_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualLabel;
                }
                private static void _ActualLabel_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActualLabel = v;
                }
                private static void _ActualLabel_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ActualLabel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ActualValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ActualValue",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValue_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValue_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValue_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValue_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValue_OnValueChanged);
                private static void _ActualValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualValue, sf);
                }
                private static bool _ActualValue_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ActualValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualValue_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualValue_Validate(r);
                }
                private static global::System.Nullable<decimal> _ActualValue_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualValue;
                }
                private static void _ActualValue_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ActualValue = v;
                }
                private static void _ActualValue_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ActualValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    ActualValueString = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "ActualValueString",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValueString_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValueString_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValueString_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValueString_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValueString_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualValueString_OnValueChanged);
                private static void _ActualValueString_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualValueString, sf);
                }
                private static bool _ActualValueString_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ActualValueString_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualValueString_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualValueString_Validate(r);
                }
                private static string _ActualValueString_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualValueString;
                }
                private static void _ActualValueString_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActualValueString = v;
                }
                private static void _ActualValueString_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ActualValueString_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualDate",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualDate_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualDate_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualDate_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualDate_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActualDate_OnValueChanged);
                private static void _ActualDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualDate, sf);
                }
                private static bool _ActualDate_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ActualDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualDate_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualDate_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualDate;
                }
                private static void _ActualDate_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualDate = global::LightSwitchApplication.IndicatorValue.DetailsClass.TruncateDate(v);
                }
                private static void _ActualDate_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ActualDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ReleaseDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ReleaseDate",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReleaseDate_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReleaseDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReleaseDate_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReleaseDate_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReleaseDate_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReleaseDate_OnValueChanged);
                private static void _ReleaseDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ReleaseDate, sf);
                }
                private static bool _ReleaseDate_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ReleaseDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReleaseDate_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReleaseDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ReleaseDate_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ReleaseDate;
                }
                private static void _ReleaseDate_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ReleaseDate = global::LightSwitchApplication.IndicatorValue.DetailsClass.TruncateDate(v);
                }
                private static void _ReleaseDate_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ReleaseDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ReportingDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ReportingDate",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingDate_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingDate_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingDate_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingDate_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingDate_OnValueChanged);
                private static void _ReportingDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportingDate, sf);
                }
                private static bool _ReportingDate_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ReportingDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportingDate_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportingDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ReportingDate_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportingDate;
                }
                private static void _ReportingDate_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ReportingDate = global::LightSwitchApplication.IndicatorValue.DetailsClass.TruncateDate(v);
                }
                private static void _ReportingDate_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ReportingDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    IndicatorReportingDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "IndicatorReportingDate",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorReportingDate_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorReportingDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorReportingDate_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorReportingDate_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorReportingDate_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorReportingDate_OnValueChanged);
                private static void _IndicatorReportingDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorReportingDate, sf);
                }
                private static bool _IndicatorReportingDate_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.IndicatorReportingDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _IndicatorReportingDate_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IndicatorReportingDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _IndicatorReportingDate_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorReportingDate;
                }
                private static void _IndicatorReportingDate_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.IndicatorReportingDate = global::LightSwitchApplication.IndicatorValue.DetailsClass.TruncateDate(v);
                }
                private static void _IndicatorReportingDate_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.IndicatorReportingDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    BusinessKey = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "BusinessKey",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._BusinessKey_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._BusinessKey_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._BusinessKey_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._BusinessKey_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._BusinessKey_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._BusinessKey_OnValueChanged);
                private static void _BusinessKey_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._BusinessKey, sf);
                }
                private static bool _BusinessKey_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.BusinessKey_IsReadOnly(ref result);
                    return result;
                }
                private static void _BusinessKey_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BusinessKey_Validate(r);
                }
                private static string _BusinessKey_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.BusinessKey;
                }
                private static void _BusinessKey_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BusinessKey = v;
                }
                private static void _BusinessKey_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.BusinessKey_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Entry
                    IndicatorStatusPercent = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "IndicatorStatusPercent",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorStatusPercent_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorStatusPercent_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorStatusPercent_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorStatusPercent_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorStatusPercent_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._IndicatorStatusPercent_OnValueChanged);
                private static void _IndicatorStatusPercent_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._IndicatorStatusPercent, sf);
                }
                private static bool _IndicatorStatusPercent_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.IndicatorStatusPercent_IsReadOnly(ref result);
                    return result;
                }
                private static void _IndicatorStatusPercent_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IndicatorStatusPercent_Validate(r);
                }
                private static global::System.Nullable<decimal> _IndicatorStatusPercent_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.IndicatorStatusPercent;
                }
                private static void _IndicatorStatusPercent_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.IndicatorStatusPercent = v;
                }
                private static void _IndicatorStatusPercent_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.IndicatorStatusPercent_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedDate",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ModifiedDate_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ModifiedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ModifiedDate_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ModifiedDate_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ModifiedDate_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ModifiedDate_OnValueChanged);
                private static void _ModifiedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedDate, sf);
                }
                private static bool _ModifiedDate_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ModifiedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedDate_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedDate_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedDate;
                }
                private static void _ModifiedDate_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ModifiedDate = global::LightSwitchApplication.IndicatorValue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifiedDate_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ModifiedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    Username = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "Username",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Username_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Username_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Username_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Username_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Username_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Username_OnValueChanged);
                private static void _Username_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._Username, sf);
                }
                private static bool _Username_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.Username_IsReadOnly(ref result);
                    return result;
                }
                private static void _Username_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Username_Validate(r);
                }
                private static string _Username_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.Username;
                }
                private static void _Username_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Username = v;
                }
                private static void _Username_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.Username_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.IndicatorValue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.IndicatorValue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.DataVersion>.Entry
                    DataVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.DataVersion>.Entry(
                        "DataVersion",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_GetCoreImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_Refresh,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._DataVersion_OnValueChanged);
                private static void _DataVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.DataVersion>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._DataVersion, sf);
                }
                private static bool _DataVersion_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.DataVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _DataVersion_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DataVersion_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _DataVersion_GetCoreImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.DataVersion;
                }
                private static global::LightSwitchApplication.DataVersion _DataVersion_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.DataVersion, global::LightSwitchApplication.DataVersion.DetailsClass>(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.DataVersion, ref d._DataVersion);
                }
                private static void _DataVersion_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::LightSwitchApplication.DataVersion v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.DataVersion, ref d._DataVersion, (i, ev) => i.DataVersion = ev, v);
                }
                private static void _DataVersion_Refresh(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.DataVersion, ref d._DataVersion);
                }
                private static void _DataVersion_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.DataVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Indicator>.Entry
                    Indicator = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Indicator>.Entry(
                        "Indicator",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_GetCoreImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_Refresh,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Indicator_OnValueChanged);
                private static void _Indicator_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Indicator>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._Indicator, sf);
                }
                private static bool _Indicator_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.Indicator_IsReadOnly(ref result);
                    return result;
                }
                private static void _Indicator_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Indicator_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Indicator_GetCoreImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.Indicator;
                }
                private static global::LightSwitchApplication.Indicator _Indicator_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Indicator, global::LightSwitchApplication.Indicator.DetailsClass>(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Indicator, ref d._Indicator);
                }
                private static void _Indicator_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::LightSwitchApplication.Indicator v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Indicator, ref d._Indicator, (i, ev) => i.Indicator = ev, v);
                }
                private static void _Indicator_Refresh(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Indicator, ref d._Indicator);
                }
                private static void _Indicator_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.Indicator_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Location>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Location>.Entry(
                        "Location",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_GetCoreImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_Refresh,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Location>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Location_GetCoreImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static global::LightSwitchApplication.Location _Location_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Location, global::LightSwitchApplication.Location.DetailsClass>(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Location, ref d._Location);
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::LightSwitchApplication.Location v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Location, ref d._Location, (i, ev) => i.Location = ev, v);
                }
                private static void _Location_Refresh(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Location, ref d._Location);
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Organization>.Entry
                    Organization = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Organization>.Entry(
                        "Organization",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_GetCoreImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_Refresh,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._Organization_OnValueChanged);
                private static void _Organization_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Organization>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._Organization, sf);
                }
                private static bool _Organization_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.Organization_IsReadOnly(ref result);
                    return result;
                }
                private static void _Organization_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Organization_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Organization_GetCoreImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.Organization;
                }
                private static global::LightSwitchApplication.Organization _Organization_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Organization, global::LightSwitchApplication.Organization.DetailsClass>(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Organization, ref d._Organization);
                }
                private static void _Organization_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::LightSwitchApplication.Organization v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Organization, ref d._Organization, (i, ev) => i.Organization = ev, v);
                }
                private static void _Organization_Refresh(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.Organization, ref d._Organization);
                }
                private static void _Organization_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.Organization_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ReportingPeriod>.Entry
                    ReportingPeriod = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ReportingPeriod>.Entry(
                        "ReportingPeriod",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_GetCoreImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_Refresh,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ReportingPeriod_OnValueChanged);
                private static void _ReportingPeriod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ReportingPeriod>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportingPeriod, sf);
                }
                private static bool _ReportingPeriod_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ReportingPeriod_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportingPeriod_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportingPeriod_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ReportingPeriod_GetCoreImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportingPeriod;
                }
                private static global::LightSwitchApplication.ReportingPeriod _ReportingPeriod_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ReportingPeriod, global::LightSwitchApplication.ReportingPeriod.DetailsClass>(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingPeriod, ref d._ReportingPeriod);
                }
                private static void _ReportingPeriod_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::LightSwitchApplication.ReportingPeriod v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingPeriod, ref d._ReportingPeriod, (i, ev) => i.ReportingPeriod = ev, v);
                }
                private static void _ReportingPeriod_Refresh(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ReportingPeriod, ref d._ReportingPeriod);
                }
                private static void _ReportingPeriod_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ReportingPeriod_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IndicatorValue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.IndicatorValue.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.IndicatorValue e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.IndicatorValue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.IndicatorValue.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.IndicatorValue e)
                {
                    e.ActiveType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, int>.Data _IndicatorValues_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _ActualLabel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Data _ActualValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _ActualValueString;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ReleaseDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ReportingDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _IndicatorReportingDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _BusinessKey;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<decimal>>.Data _IndicatorStatusPercent;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _Username;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.DataVersion>.Data _DataVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Indicator>.Data _Indicator;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Location>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.Organization>.Data _Organization;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ReportingPeriod>.Data _ReportingPeriod;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.IndicatorValue, global::LightSwitchApplication.IndicatorValue.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
        }
    
        #endregion
    }
    
    #endregion
}
