//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the MeerkatData datasource.
    /// </summary>
    public sealed partial class MeerkatDataService
        : global::LightSwitchApplication.MeerkatData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MeerkatDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Inserting(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Inserted(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Updating(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Updated(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Deleting(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Deleted(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Validate(global::LightSwitchApplication.Activity entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Activity, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Inserting(global::LightSwitchApplication.Indicator entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Inserted(global::LightSwitchApplication.Indicator entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Updating(global::LightSwitchApplication.Indicator entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Updated(global::LightSwitchApplication.Indicator entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Deleting(global::LightSwitchApplication.Indicator entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Deleted(global::LightSwitchApplication.Indicator entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Validate(global::LightSwitchApplication.Indicator entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Indicators_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Indicator, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Inserting(global::LightSwitchApplication.IndicatorLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Inserted(global::LightSwitchApplication.IndicatorLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Updating(global::LightSwitchApplication.IndicatorLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Updated(global::LightSwitchApplication.IndicatorLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Deleting(global::LightSwitchApplication.IndicatorLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Deleted(global::LightSwitchApplication.IndicatorLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Validate(global::LightSwitchApplication.IndicatorLocation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorLocations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorLocation, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Inserting(global::LightSwitchApplication.IndicatorType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Inserted(global::LightSwitchApplication.IndicatorType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Updating(global::LightSwitchApplication.IndicatorType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Updated(global::LightSwitchApplication.IndicatorType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Deleting(global::LightSwitchApplication.IndicatorType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Deleted(global::LightSwitchApplication.IndicatorType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Validate(global::LightSwitchApplication.IndicatorType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Inserting(global::LightSwitchApplication.Milestone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Inserted(global::LightSwitchApplication.Milestone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Updating(global::LightSwitchApplication.Milestone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Updated(global::LightSwitchApplication.Milestone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Deleting(global::LightSwitchApplication.Milestone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Deleted(global::LightSwitchApplication.Milestone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Validate(global::LightSwitchApplication.Milestone entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Milestones_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Milestone, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Inserting(global::LightSwitchApplication.MilestoneLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Inserted(global::LightSwitchApplication.MilestoneLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Updating(global::LightSwitchApplication.MilestoneLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Updated(global::LightSwitchApplication.MilestoneLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Deleting(global::LightSwitchApplication.MilestoneLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Deleted(global::LightSwitchApplication.MilestoneLocation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Validate(global::LightSwitchApplication.MilestoneLocation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneLocations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneLocation, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Inserting(global::LightSwitchApplication.MilestoneType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Inserted(global::LightSwitchApplication.MilestoneType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Updating(global::LightSwitchApplication.MilestoneType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Updated(global::LightSwitchApplication.MilestoneType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Deleting(global::LightSwitchApplication.MilestoneType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Deleted(global::LightSwitchApplication.MilestoneType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Validate(global::LightSwitchApplication.MilestoneType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Inserting(global::LightSwitchApplication.Outcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Inserted(global::LightSwitchApplication.Outcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Updating(global::LightSwitchApplication.Outcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Updated(global::LightSwitchApplication.Outcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Deleting(global::LightSwitchApplication.Outcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Deleted(global::LightSwitchApplication.Outcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Validate(global::LightSwitchApplication.Outcome entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outcomes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Outcome, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Inserting(global::LightSwitchApplication.OutcomeOrganization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Inserted(global::LightSwitchApplication.OutcomeOrganization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Updating(global::LightSwitchApplication.OutcomeOrganization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Updated(global::LightSwitchApplication.OutcomeOrganization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Deleting(global::LightSwitchApplication.OutcomeOrganization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Deleted(global::LightSwitchApplication.OutcomeOrganization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Validate(global::LightSwitchApplication.OutcomeOrganization entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomeOrganizations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutcomeOrganization, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Inserting(global::LightSwitchApplication.OutcomePersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Inserted(global::LightSwitchApplication.OutcomePersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Updating(global::LightSwitchApplication.OutcomePersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Updated(global::LightSwitchApplication.OutcomePersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Deleting(global::LightSwitchApplication.OutcomePersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Deleted(global::LightSwitchApplication.OutcomePersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Validate(global::LightSwitchApplication.OutcomePersonRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutcomePersonRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutcomePersonRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Inserting(global::LightSwitchApplication.Output entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Inserted(global::LightSwitchApplication.Output entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Updating(global::LightSwitchApplication.Output entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Updated(global::LightSwitchApplication.Output entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Deleting(global::LightSwitchApplication.Output entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Deleted(global::LightSwitchApplication.Output entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Validate(global::LightSwitchApplication.Output entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Outputs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Output, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Inserting(global::LightSwitchApplication.OutputOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Inserted(global::LightSwitchApplication.OutputOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Updating(global::LightSwitchApplication.OutputOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Updated(global::LightSwitchApplication.OutputOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Deleting(global::LightSwitchApplication.OutputOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Deleted(global::LightSwitchApplication.OutputOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Validate(global::LightSwitchApplication.OutputOutputLink entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputOutputLinks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutputOutputLink, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Inserting(global::LightSwitchApplication.OutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Inserted(global::LightSwitchApplication.OutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Updating(global::LightSwitchApplication.OutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Updated(global::LightSwitchApplication.OutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Deleting(global::LightSwitchApplication.OutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Deleted(global::LightSwitchApplication.OutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Validate(global::LightSwitchApplication.OutputPersonRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OutputPersonRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutputPersonRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Inserting(global::LightSwitchApplication.SubOutput entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Inserted(global::LightSwitchApplication.SubOutput entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Updating(global::LightSwitchApplication.SubOutput entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Updated(global::LightSwitchApplication.SubOutput entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Deleting(global::LightSwitchApplication.SubOutput entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Deleted(global::LightSwitchApplication.SubOutput entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Validate(global::LightSwitchApplication.SubOutput entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutput, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Inserting(global::LightSwitchApplication.SubOutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Inserted(global::LightSwitchApplication.SubOutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Updating(global::LightSwitchApplication.SubOutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Updated(global::LightSwitchApplication.SubOutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Deleting(global::LightSwitchApplication.SubOutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Deleted(global::LightSwitchApplication.SubOutputPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Validate(global::LightSwitchApplication.SubOutputPersonRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputPersonRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutputPersonRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Inserting(global::LightSwitchApplication.SubOutputSubOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Inserted(global::LightSwitchApplication.SubOutputSubOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Updating(global::LightSwitchApplication.SubOutputSubOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Updated(global::LightSwitchApplication.SubOutputSubOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Deleting(global::LightSwitchApplication.SubOutputSubOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Deleted(global::LightSwitchApplication.SubOutputSubOutputLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Validate(global::LightSwitchApplication.SubOutputSubOutputLink entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubOutputSubOutputLinks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutputSubOutputLink, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Inserting(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Inserted(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Updating(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Updated(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Deleting(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Deleted(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Validate(global::LightSwitchApplication.ActiveType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActiveType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Inserting(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Inserted(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Updating(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Updated(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Deleting(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Deleted(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Validate(global::LightSwitchApplication.DataSource entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSource, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Inserting(global::LightSwitchApplication.DataVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Inserted(global::LightSwitchApplication.DataVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Updating(global::LightSwitchApplication.DataVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Updated(global::LightSwitchApplication.DataVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Deleting(global::LightSwitchApplication.DataVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Deleted(global::LightSwitchApplication.DataVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Validate(global::LightSwitchApplication.DataVersion entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataVersion, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Inserting(global::LightSwitchApplication.DataVersionLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Inserted(global::LightSwitchApplication.DataVersionLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Updating(global::LightSwitchApplication.DataVersionLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Updated(global::LightSwitchApplication.DataVersionLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Deleting(global::LightSwitchApplication.DataVersionLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Deleted(global::LightSwitchApplication.DataVersionLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Validate(global::LightSwitchApplication.DataVersionLevel entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevels_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataVersionLevel, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Inserting(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Inserted(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Updating(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Updated(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Deleting(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Deleted(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Validate(global::LightSwitchApplication.DimDate entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DimDate, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Inserting(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Inserted(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Updating(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Updated(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Deleting(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Deleted(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Validate(global::LightSwitchApplication.Location entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Location, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Inserting(global::LightSwitchApplication.LocationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Inserted(global::LightSwitchApplication.LocationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Updating(global::LightSwitchApplication.LocationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Updated(global::LightSwitchApplication.LocationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Deleting(global::LightSwitchApplication.LocationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Deleted(global::LightSwitchApplication.LocationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Validate(global::LightSwitchApplication.LocationType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LocationType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Inserting(global::LightSwitchApplication.Organization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Inserted(global::LightSwitchApplication.Organization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Updating(global::LightSwitchApplication.Organization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Updated(global::LightSwitchApplication.Organization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Deleting(global::LightSwitchApplication.Organization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Deleted(global::LightSwitchApplication.Organization entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Validate(global::LightSwitchApplication.Organization entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Organizations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Organization, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Inserting(global::LightSwitchApplication.OrganizationPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Inserted(global::LightSwitchApplication.OrganizationPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Updating(global::LightSwitchApplication.OrganizationPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Updated(global::LightSwitchApplication.OrganizationPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Deleting(global::LightSwitchApplication.OrganizationPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Deleted(global::LightSwitchApplication.OrganizationPersonRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Validate(global::LightSwitchApplication.OrganizationPersonRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationPersonRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrganizationPersonRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Inserting(global::LightSwitchApplication.OrganizationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Inserted(global::LightSwitchApplication.OrganizationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Updating(global::LightSwitchApplication.OrganizationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Updated(global::LightSwitchApplication.OrganizationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Deleting(global::LightSwitchApplication.OrganizationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Deleted(global::LightSwitchApplication.OrganizationType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Validate(global::LightSwitchApplication.OrganizationType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrganizationType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Inserting(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Inserted(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Updating(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Updated(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Deleting(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Deleted(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Validate(global::LightSwitchApplication.Person entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Person, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Inserting(global::LightSwitchApplication.ReportingPeriod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Inserted(global::LightSwitchApplication.ReportingPeriod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Updating(global::LightSwitchApplication.ReportingPeriod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Updated(global::LightSwitchApplication.ReportingPeriod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Deleting(global::LightSwitchApplication.ReportingPeriod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Deleted(global::LightSwitchApplication.ReportingPeriod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Validate(global::LightSwitchApplication.ReportingPeriod entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingPeriods_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReportingPeriod, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Inserting(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Inserted(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Updating(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Updated(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Deleting(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Deleted(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Validate(global::LightSwitchApplication.Role entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Role, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Inserting(global::LightSwitchApplication.IndicatorValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Inserted(global::LightSwitchApplication.IndicatorValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Updating(global::LightSwitchApplication.IndicatorValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Updated(global::LightSwitchApplication.IndicatorValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Deleting(global::LightSwitchApplication.IndicatorValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Deleted(global::LightSwitchApplication.IndicatorValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Validate(global::LightSwitchApplication.IndicatorValue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IndicatorValues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorValue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Inserting(global::LightSwitchApplication.MilestoneValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Inserted(global::LightSwitchApplication.MilestoneValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Updating(global::LightSwitchApplication.MilestoneValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Updated(global::LightSwitchApplication.MilestoneValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Deleting(global::LightSwitchApplication.MilestoneValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Deleted(global::LightSwitchApplication.MilestoneValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Validate(global::LightSwitchApplication.MilestoneValue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MilestoneValues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneValue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Inserting(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Inserted(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Updating(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Updated(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Deleting(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Deleted(global::LightSwitchApplication.Status entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::LightSwitchApplication.Status entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Status, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Filtered_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DataVersions_Filtered_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersions_Filtered_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DataVersion> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DataVersions_Filtered_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DataVersion> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DataVersions_Filtered_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Activity>
                __ActivitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Activity>(
                    "Activities",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Activities_Filter);
            private static bool __Activities_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Activities_CanInsert(ref result);
                return result;
            }
            private static bool __Activities_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Activities_CanUpdate(ref result);
                return result;
            }
            private static bool __Activities_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Activities_CanDelete(ref result);
                return result;
            }
            private static bool __Activities_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Activities_CanRead(ref result);
                return result;
            }
            private static void __Activities_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Inserting(e);
            }
            private static void __Activities_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Inserted(e);
            }
            private static void __Activities_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Updating(e);
            }
            private static void __Activities_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Updated(e);
            }
            private static void __Activities_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Deleting(e);
            }
            private static void __Activities_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Deleted(e);
            }
            private static void __Activities_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Activities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Activity, bool>> __Activities_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Activity, bool>> filter = null;
                d.Activities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Indicator>
                __IndicatorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Indicator>(
                    "Indicators",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Indicators_Filter);
            private static bool __Indicators_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Indicators_CanInsert(ref result);
                return result;
            }
            private static bool __Indicators_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Indicators_CanUpdate(ref result);
                return result;
            }
            private static bool __Indicators_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Indicators_CanDelete(ref result);
                return result;
            }
            private static bool __Indicators_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Indicators_CanRead(ref result);
                return result;
            }
            private static void __Indicators_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e)
            {
                d.Indicators_Inserting(e);
            }
            private static void __Indicators_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e)
            {
                d.Indicators_Inserted(e);
            }
            private static void __Indicators_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e)
            {
                d.Indicators_Updating(e);
            }
            private static void __Indicators_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e)
            {
                d.Indicators_Updated(e);
            }
            private static void __Indicators_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e)
            {
                d.Indicators_Deleting(e);
            }
            private static void __Indicators_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e)
            {
                d.Indicators_Deleted(e);
            }
            private static void __Indicators_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Indicator e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Indicators_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Indicator, bool>> __Indicators_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Indicator, bool>> filter = null;
                d.Indicators_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.IndicatorLocation>
                __IndicatorLocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.IndicatorLocation>(
                    "IndicatorLocations",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorLocations_Filter);
            private static bool __IndicatorLocations_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorLocations_CanInsert(ref result);
                return result;
            }
            private static bool __IndicatorLocations_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorLocations_CanUpdate(ref result);
                return result;
            }
            private static bool __IndicatorLocations_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorLocations_CanDelete(ref result);
                return result;
            }
            private static bool __IndicatorLocations_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorLocations_CanRead(ref result);
                return result;
            }
            private static void __IndicatorLocations_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e)
            {
                d.IndicatorLocations_Inserting(e);
            }
            private static void __IndicatorLocations_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e)
            {
                d.IndicatorLocations_Inserted(e);
            }
            private static void __IndicatorLocations_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e)
            {
                d.IndicatorLocations_Updating(e);
            }
            private static void __IndicatorLocations_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e)
            {
                d.IndicatorLocations_Updated(e);
            }
            private static void __IndicatorLocations_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e)
            {
                d.IndicatorLocations_Deleting(e);
            }
            private static void __IndicatorLocations_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e)
            {
                d.IndicatorLocations_Deleted(e);
            }
            private static void __IndicatorLocations_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorLocation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IndicatorLocations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorLocation, bool>> __IndicatorLocations_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorLocation, bool>> filter = null;
                d.IndicatorLocations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.IndicatorType>
                __IndicatorTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.IndicatorType>(
                    "IndicatorTypes",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorTypes_Filter);
            private static bool __IndicatorTypes_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorTypes_CanInsert(ref result);
                return result;
            }
            private static bool __IndicatorTypes_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __IndicatorTypes_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorTypes_CanDelete(ref result);
                return result;
            }
            private static bool __IndicatorTypes_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorTypes_CanRead(ref result);
                return result;
            }
            private static void __IndicatorTypes_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e)
            {
                d.IndicatorTypes_Inserting(e);
            }
            private static void __IndicatorTypes_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e)
            {
                d.IndicatorTypes_Inserted(e);
            }
            private static void __IndicatorTypes_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e)
            {
                d.IndicatorTypes_Updating(e);
            }
            private static void __IndicatorTypes_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e)
            {
                d.IndicatorTypes_Updated(e);
            }
            private static void __IndicatorTypes_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e)
            {
                d.IndicatorTypes_Deleting(e);
            }
            private static void __IndicatorTypes_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e)
            {
                d.IndicatorTypes_Deleted(e);
            }
            private static void __IndicatorTypes_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IndicatorTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorType, bool>> __IndicatorTypes_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorType, bool>> filter = null;
                d.IndicatorTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Milestone>
                __MilestonesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Milestone>(
                    "Milestones",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Milestones_Filter);
            private static bool __Milestones_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Milestones_CanInsert(ref result);
                return result;
            }
            private static bool __Milestones_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Milestones_CanUpdate(ref result);
                return result;
            }
            private static bool __Milestones_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Milestones_CanDelete(ref result);
                return result;
            }
            private static bool __Milestones_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Milestones_CanRead(ref result);
                return result;
            }
            private static void __Milestones_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e)
            {
                d.Milestones_Inserting(e);
            }
            private static void __Milestones_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e)
            {
                d.Milestones_Inserted(e);
            }
            private static void __Milestones_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e)
            {
                d.Milestones_Updating(e);
            }
            private static void __Milestones_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e)
            {
                d.Milestones_Updated(e);
            }
            private static void __Milestones_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e)
            {
                d.Milestones_Deleting(e);
            }
            private static void __Milestones_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e)
            {
                d.Milestones_Deleted(e);
            }
            private static void __Milestones_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Milestone e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Milestones_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Milestone, bool>> __Milestones_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Milestone, bool>> filter = null;
                d.Milestones_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.MilestoneLocation>
                __MilestoneLocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.MilestoneLocation>(
                    "MilestoneLocations",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneLocations_Filter);
            private static bool __MilestoneLocations_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneLocations_CanInsert(ref result);
                return result;
            }
            private static bool __MilestoneLocations_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneLocations_CanUpdate(ref result);
                return result;
            }
            private static bool __MilestoneLocations_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneLocations_CanDelete(ref result);
                return result;
            }
            private static bool __MilestoneLocations_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneLocations_CanRead(ref result);
                return result;
            }
            private static void __MilestoneLocations_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e)
            {
                d.MilestoneLocations_Inserting(e);
            }
            private static void __MilestoneLocations_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e)
            {
                d.MilestoneLocations_Inserted(e);
            }
            private static void __MilestoneLocations_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e)
            {
                d.MilestoneLocations_Updating(e);
            }
            private static void __MilestoneLocations_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e)
            {
                d.MilestoneLocations_Updated(e);
            }
            private static void __MilestoneLocations_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e)
            {
                d.MilestoneLocations_Deleting(e);
            }
            private static void __MilestoneLocations_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e)
            {
                d.MilestoneLocations_Deleted(e);
            }
            private static void __MilestoneLocations_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneLocation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MilestoneLocations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneLocation, bool>> __MilestoneLocations_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneLocation, bool>> filter = null;
                d.MilestoneLocations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.MilestoneType>
                __MilestoneTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.MilestoneType>(
                    "MilestoneTypes",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneTypes_Filter);
            private static bool __MilestoneTypes_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneTypes_CanInsert(ref result);
                return result;
            }
            private static bool __MilestoneTypes_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __MilestoneTypes_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneTypes_CanDelete(ref result);
                return result;
            }
            private static bool __MilestoneTypes_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneTypes_CanRead(ref result);
                return result;
            }
            private static void __MilestoneTypes_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e)
            {
                d.MilestoneTypes_Inserting(e);
            }
            private static void __MilestoneTypes_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e)
            {
                d.MilestoneTypes_Inserted(e);
            }
            private static void __MilestoneTypes_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e)
            {
                d.MilestoneTypes_Updating(e);
            }
            private static void __MilestoneTypes_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e)
            {
                d.MilestoneTypes_Updated(e);
            }
            private static void __MilestoneTypes_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e)
            {
                d.MilestoneTypes_Deleting(e);
            }
            private static void __MilestoneTypes_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e)
            {
                d.MilestoneTypes_Deleted(e);
            }
            private static void __MilestoneTypes_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MilestoneTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneType, bool>> __MilestoneTypes_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneType, bool>> filter = null;
                d.MilestoneTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Outcome>
                __OutcomesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Outcome>(
                    "Outcomes",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outcomes_Filter);
            private static bool __Outcomes_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outcomes_CanInsert(ref result);
                return result;
            }
            private static bool __Outcomes_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outcomes_CanUpdate(ref result);
                return result;
            }
            private static bool __Outcomes_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outcomes_CanDelete(ref result);
                return result;
            }
            private static bool __Outcomes_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outcomes_CanRead(ref result);
                return result;
            }
            private static void __Outcomes_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e)
            {
                d.Outcomes_Inserting(e);
            }
            private static void __Outcomes_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e)
            {
                d.Outcomes_Inserted(e);
            }
            private static void __Outcomes_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e)
            {
                d.Outcomes_Updating(e);
            }
            private static void __Outcomes_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e)
            {
                d.Outcomes_Updated(e);
            }
            private static void __Outcomes_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e)
            {
                d.Outcomes_Deleting(e);
            }
            private static void __Outcomes_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e)
            {
                d.Outcomes_Deleted(e);
            }
            private static void __Outcomes_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Outcome e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Outcomes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Outcome, bool>> __Outcomes_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Outcome, bool>> filter = null;
                d.Outcomes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutcomeOrganization>
                __OutcomeOrganizationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutcomeOrganization>(
                    "OutcomeOrganizations",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomeOrganizations_Filter);
            private static bool __OutcomeOrganizations_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomeOrganizations_CanInsert(ref result);
                return result;
            }
            private static bool __OutcomeOrganizations_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomeOrganizations_CanUpdate(ref result);
                return result;
            }
            private static bool __OutcomeOrganizations_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomeOrganizations_CanDelete(ref result);
                return result;
            }
            private static bool __OutcomeOrganizations_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomeOrganizations_CanRead(ref result);
                return result;
            }
            private static void __OutcomeOrganizations_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e)
            {
                d.OutcomeOrganizations_Inserting(e);
            }
            private static void __OutcomeOrganizations_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e)
            {
                d.OutcomeOrganizations_Inserted(e);
            }
            private static void __OutcomeOrganizations_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e)
            {
                d.OutcomeOrganizations_Updating(e);
            }
            private static void __OutcomeOrganizations_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e)
            {
                d.OutcomeOrganizations_Updated(e);
            }
            private static void __OutcomeOrganizations_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e)
            {
                d.OutcomeOrganizations_Deleting(e);
            }
            private static void __OutcomeOrganizations_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e)
            {
                d.OutcomeOrganizations_Deleted(e);
            }
            private static void __OutcomeOrganizations_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomeOrganization e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OutcomeOrganizations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutcomeOrganization, bool>> __OutcomeOrganizations_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutcomeOrganization, bool>> filter = null;
                d.OutcomeOrganizations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutcomePersonRole>
                __OutcomePersonRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutcomePersonRole>(
                    "OutcomePersonRoles",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutcomePersonRoles_Filter);
            private static bool __OutcomePersonRoles_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomePersonRoles_CanInsert(ref result);
                return result;
            }
            private static bool __OutcomePersonRoles_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomePersonRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __OutcomePersonRoles_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomePersonRoles_CanDelete(ref result);
                return result;
            }
            private static bool __OutcomePersonRoles_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutcomePersonRoles_CanRead(ref result);
                return result;
            }
            private static void __OutcomePersonRoles_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e)
            {
                d.OutcomePersonRoles_Inserting(e);
            }
            private static void __OutcomePersonRoles_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e)
            {
                d.OutcomePersonRoles_Inserted(e);
            }
            private static void __OutcomePersonRoles_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e)
            {
                d.OutcomePersonRoles_Updating(e);
            }
            private static void __OutcomePersonRoles_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e)
            {
                d.OutcomePersonRoles_Updated(e);
            }
            private static void __OutcomePersonRoles_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e)
            {
                d.OutcomePersonRoles_Deleting(e);
            }
            private static void __OutcomePersonRoles_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e)
            {
                d.OutcomePersonRoles_Deleted(e);
            }
            private static void __OutcomePersonRoles_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutcomePersonRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OutcomePersonRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutcomePersonRole, bool>> __OutcomePersonRoles_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutcomePersonRole, bool>> filter = null;
                d.OutcomePersonRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Output>
                __OutputsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Output>(
                    "Outputs",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Outputs_Filter);
            private static bool __Outputs_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outputs_CanInsert(ref result);
                return result;
            }
            private static bool __Outputs_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outputs_CanUpdate(ref result);
                return result;
            }
            private static bool __Outputs_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outputs_CanDelete(ref result);
                return result;
            }
            private static bool __Outputs_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Outputs_CanRead(ref result);
                return result;
            }
            private static void __Outputs_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e)
            {
                d.Outputs_Inserting(e);
            }
            private static void __Outputs_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e)
            {
                d.Outputs_Inserted(e);
            }
            private static void __Outputs_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e)
            {
                d.Outputs_Updating(e);
            }
            private static void __Outputs_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e)
            {
                d.Outputs_Updated(e);
            }
            private static void __Outputs_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e)
            {
                d.Outputs_Deleting(e);
            }
            private static void __Outputs_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e)
            {
                d.Outputs_Deleted(e);
            }
            private static void __Outputs_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Output e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Outputs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Output, bool>> __Outputs_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Output, bool>> filter = null;
                d.Outputs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutputOutputLink>
                __OutputOutputLinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutputOutputLink>(
                    "OutputOutputLinks",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputOutputLinks_Filter);
            private static bool __OutputOutputLinks_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputOutputLinks_CanInsert(ref result);
                return result;
            }
            private static bool __OutputOutputLinks_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputOutputLinks_CanUpdate(ref result);
                return result;
            }
            private static bool __OutputOutputLinks_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputOutputLinks_CanDelete(ref result);
                return result;
            }
            private static bool __OutputOutputLinks_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputOutputLinks_CanRead(ref result);
                return result;
            }
            private static void __OutputOutputLinks_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e)
            {
                d.OutputOutputLinks_Inserting(e);
            }
            private static void __OutputOutputLinks_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e)
            {
                d.OutputOutputLinks_Inserted(e);
            }
            private static void __OutputOutputLinks_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e)
            {
                d.OutputOutputLinks_Updating(e);
            }
            private static void __OutputOutputLinks_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e)
            {
                d.OutputOutputLinks_Updated(e);
            }
            private static void __OutputOutputLinks_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e)
            {
                d.OutputOutputLinks_Deleting(e);
            }
            private static void __OutputOutputLinks_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e)
            {
                d.OutputOutputLinks_Deleted(e);
            }
            private static void __OutputOutputLinks_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputOutputLink e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OutputOutputLinks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutputOutputLink, bool>> __OutputOutputLinks_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutputOutputLink, bool>> filter = null;
                d.OutputOutputLinks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutputPersonRole>
                __OutputPersonRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OutputPersonRole>(
                    "OutputPersonRoles",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OutputPersonRoles_Filter);
            private static bool __OutputPersonRoles_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputPersonRoles_CanInsert(ref result);
                return result;
            }
            private static bool __OutputPersonRoles_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputPersonRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __OutputPersonRoles_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputPersonRoles_CanDelete(ref result);
                return result;
            }
            private static bool __OutputPersonRoles_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OutputPersonRoles_CanRead(ref result);
                return result;
            }
            private static void __OutputPersonRoles_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e)
            {
                d.OutputPersonRoles_Inserting(e);
            }
            private static void __OutputPersonRoles_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e)
            {
                d.OutputPersonRoles_Inserted(e);
            }
            private static void __OutputPersonRoles_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e)
            {
                d.OutputPersonRoles_Updating(e);
            }
            private static void __OutputPersonRoles_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e)
            {
                d.OutputPersonRoles_Updated(e);
            }
            private static void __OutputPersonRoles_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e)
            {
                d.OutputPersonRoles_Deleting(e);
            }
            private static void __OutputPersonRoles_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e)
            {
                d.OutputPersonRoles_Deleted(e);
            }
            private static void __OutputPersonRoles_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OutputPersonRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OutputPersonRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutputPersonRole, bool>> __OutputPersonRoles_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OutputPersonRole, bool>> filter = null;
                d.OutputPersonRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.SubOutput>
                __SubOutputsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.SubOutput>(
                    "SubOutputs",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputs_Filter);
            private static bool __SubOutputs_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputs_CanInsert(ref result);
                return result;
            }
            private static bool __SubOutputs_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputs_CanUpdate(ref result);
                return result;
            }
            private static bool __SubOutputs_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputs_CanDelete(ref result);
                return result;
            }
            private static bool __SubOutputs_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputs_CanRead(ref result);
                return result;
            }
            private static void __SubOutputs_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e)
            {
                d.SubOutputs_Inserting(e);
            }
            private static void __SubOutputs_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e)
            {
                d.SubOutputs_Inserted(e);
            }
            private static void __SubOutputs_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e)
            {
                d.SubOutputs_Updating(e);
            }
            private static void __SubOutputs_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e)
            {
                d.SubOutputs_Updated(e);
            }
            private static void __SubOutputs_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e)
            {
                d.SubOutputs_Deleting(e);
            }
            private static void __SubOutputs_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e)
            {
                d.SubOutputs_Deleted(e);
            }
            private static void __SubOutputs_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutput e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SubOutputs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutput, bool>> __SubOutputs_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutput, bool>> filter = null;
                d.SubOutputs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.SubOutputPersonRole>
                __SubOutputPersonRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.SubOutputPersonRole>(
                    "SubOutputPersonRoles",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputPersonRoles_Filter);
            private static bool __SubOutputPersonRoles_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputPersonRoles_CanInsert(ref result);
                return result;
            }
            private static bool __SubOutputPersonRoles_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputPersonRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __SubOutputPersonRoles_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputPersonRoles_CanDelete(ref result);
                return result;
            }
            private static bool __SubOutputPersonRoles_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputPersonRoles_CanRead(ref result);
                return result;
            }
            private static void __SubOutputPersonRoles_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e)
            {
                d.SubOutputPersonRoles_Inserting(e);
            }
            private static void __SubOutputPersonRoles_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e)
            {
                d.SubOutputPersonRoles_Inserted(e);
            }
            private static void __SubOutputPersonRoles_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e)
            {
                d.SubOutputPersonRoles_Updating(e);
            }
            private static void __SubOutputPersonRoles_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e)
            {
                d.SubOutputPersonRoles_Updated(e);
            }
            private static void __SubOutputPersonRoles_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e)
            {
                d.SubOutputPersonRoles_Deleting(e);
            }
            private static void __SubOutputPersonRoles_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e)
            {
                d.SubOutputPersonRoles_Deleted(e);
            }
            private static void __SubOutputPersonRoles_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputPersonRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SubOutputPersonRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutputPersonRole, bool>> __SubOutputPersonRoles_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutputPersonRole, bool>> filter = null;
                d.SubOutputPersonRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.SubOutputSubOutputLink>
                __SubOutputSubOutputLinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.SubOutputSubOutputLink>(
                    "SubOutputSubOutputLinks",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SubOutputSubOutputLinks_Filter);
            private static bool __SubOutputSubOutputLinks_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputSubOutputLinks_CanInsert(ref result);
                return result;
            }
            private static bool __SubOutputSubOutputLinks_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputSubOutputLinks_CanUpdate(ref result);
                return result;
            }
            private static bool __SubOutputSubOutputLinks_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputSubOutputLinks_CanDelete(ref result);
                return result;
            }
            private static bool __SubOutputSubOutputLinks_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.SubOutputSubOutputLinks_CanRead(ref result);
                return result;
            }
            private static void __SubOutputSubOutputLinks_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e)
            {
                d.SubOutputSubOutputLinks_Inserting(e);
            }
            private static void __SubOutputSubOutputLinks_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e)
            {
                d.SubOutputSubOutputLinks_Inserted(e);
            }
            private static void __SubOutputSubOutputLinks_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e)
            {
                d.SubOutputSubOutputLinks_Updating(e);
            }
            private static void __SubOutputSubOutputLinks_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e)
            {
                d.SubOutputSubOutputLinks_Updated(e);
            }
            private static void __SubOutputSubOutputLinks_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e)
            {
                d.SubOutputSubOutputLinks_Deleting(e);
            }
            private static void __SubOutputSubOutputLinks_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e)
            {
                d.SubOutputSubOutputLinks_Deleted(e);
            }
            private static void __SubOutputSubOutputLinks_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.SubOutputSubOutputLink e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SubOutputSubOutputLinks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutputSubOutputLink, bool>> __SubOutputSubOutputLinks_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubOutputSubOutputLink, bool>> filter = null;
                d.SubOutputSubOutputLinks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.ActiveType>
                __ActiveTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.ActiveType>(
                    "ActiveTypes",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ActiveTypes_Filter);
            private static bool __ActiveTypes_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ActiveTypes_CanInsert(ref result);
                return result;
            }
            private static bool __ActiveTypes_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ActiveTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __ActiveTypes_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ActiveTypes_CanDelete(ref result);
                return result;
            }
            private static bool __ActiveTypes_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ActiveTypes_CanRead(ref result);
                return result;
            }
            private static void __ActiveTypes_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Inserting(e);
            }
            private static void __ActiveTypes_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Inserted(e);
            }
            private static void __ActiveTypes_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Updating(e);
            }
            private static void __ActiveTypes_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Updated(e);
            }
            private static void __ActiveTypes_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Deleting(e);
            }
            private static void __ActiveTypes_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Deleted(e);
            }
            private static void __ActiveTypes_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ActiveType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActiveTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActiveType, bool>> __ActiveTypes_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActiveType, bool>> filter = null;
                d.ActiveTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataSource>
                __DataSourcesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataSource>(
                    "DataSources",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataSources_Filter);
            private static bool __DataSources_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataSources_CanInsert(ref result);
                return result;
            }
            private static bool __DataSources_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataSources_CanUpdate(ref result);
                return result;
            }
            private static bool __DataSources_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataSources_CanDelete(ref result);
                return result;
            }
            private static bool __DataSources_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataSources_CanRead(ref result);
                return result;
            }
            private static void __DataSources_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Inserting(e);
            }
            private static void __DataSources_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Inserted(e);
            }
            private static void __DataSources_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Updating(e);
            }
            private static void __DataSources_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Updated(e);
            }
            private static void __DataSources_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Deleting(e);
            }
            private static void __DataSources_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Deleted(e);
            }
            private static void __DataSources_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataSource e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DataSources_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSource, bool>> __DataSources_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSource, bool>> filter = null;
                d.DataSources_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataVersion>
                __DataVersionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataVersion>(
                    "DataVersions",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Filter);
            private static bool __DataVersions_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersions_CanInsert(ref result);
                return result;
            }
            private static bool __DataVersions_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersions_CanUpdate(ref result);
                return result;
            }
            private static bool __DataVersions_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersions_CanDelete(ref result);
                return result;
            }
            private static bool __DataVersions_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersions_CanRead(ref result);
                return result;
            }
            private static void __DataVersions_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e)
            {
                d.DataVersions_Inserting(e);
            }
            private static void __DataVersions_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e)
            {
                d.DataVersions_Inserted(e);
            }
            private static void __DataVersions_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e)
            {
                d.DataVersions_Updating(e);
            }
            private static void __DataVersions_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e)
            {
                d.DataVersions_Updated(e);
            }
            private static void __DataVersions_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e)
            {
                d.DataVersions_Deleting(e);
            }
            private static void __DataVersions_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e)
            {
                d.DataVersions_Deleted(e);
            }
            private static void __DataVersions_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersion e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DataVersions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataVersion, bool>> __DataVersions_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataVersion, bool>> filter = null;
                d.DataVersions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataVersionLevel>
                __DataVersionLevelsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataVersionLevel>(
                    "DataVersionLevels",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersionLevels_Filter);
            private static bool __DataVersionLevels_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersionLevels_CanInsert(ref result);
                return result;
            }
            private static bool __DataVersionLevels_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersionLevels_CanUpdate(ref result);
                return result;
            }
            private static bool __DataVersionLevels_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersionLevels_CanDelete(ref result);
                return result;
            }
            private static bool __DataVersionLevels_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DataVersionLevels_CanRead(ref result);
                return result;
            }
            private static void __DataVersionLevels_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e)
            {
                d.DataVersionLevels_Inserting(e);
            }
            private static void __DataVersionLevels_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e)
            {
                d.DataVersionLevels_Inserted(e);
            }
            private static void __DataVersionLevels_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e)
            {
                d.DataVersionLevels_Updating(e);
            }
            private static void __DataVersionLevels_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e)
            {
                d.DataVersionLevels_Updated(e);
            }
            private static void __DataVersionLevels_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e)
            {
                d.DataVersionLevels_Deleting(e);
            }
            private static void __DataVersionLevels_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e)
            {
                d.DataVersionLevels_Deleted(e);
            }
            private static void __DataVersionLevels_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DataVersionLevels_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataVersionLevel, bool>> __DataVersionLevels_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataVersionLevel, bool>> filter = null;
                d.DataVersionLevels_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DimDate>
                __DimDatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DimDate>(
                    "DimDates",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DimDates_Filter);
            private static bool __DimDates_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DimDates_CanInsert(ref result);
                return result;
            }
            private static bool __DimDates_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DimDates_CanUpdate(ref result);
                return result;
            }
            private static bool __DimDates_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DimDates_CanDelete(ref result);
                return result;
            }
            private static bool __DimDates_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.DimDates_CanRead(ref result);
                return result;
            }
            private static void __DimDates_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Inserting(e);
            }
            private static void __DimDates_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Inserted(e);
            }
            private static void __DimDates_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Updating(e);
            }
            private static void __DimDates_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Updated(e);
            }
            private static void __DimDates_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Deleting(e);
            }
            private static void __DimDates_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Deleted(e);
            }
            private static void __DimDates_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DimDates_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DimDate, bool>> __DimDates_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DimDate, bool>> filter = null;
                d.DimDates_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Location>
                __LocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Location>(
                    "Locations",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Locations_Filter);
            private static bool __Locations_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Locations_CanInsert(ref result);
                return result;
            }
            private static bool __Locations_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Locations_CanUpdate(ref result);
                return result;
            }
            private static bool __Locations_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Locations_CanDelete(ref result);
                return result;
            }
            private static bool __Locations_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Locations_CanRead(ref result);
                return result;
            }
            private static void __Locations_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Inserting(e);
            }
            private static void __Locations_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Inserted(e);
            }
            private static void __Locations_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Updating(e);
            }
            private static void __Locations_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Updated(e);
            }
            private static void __Locations_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Deleting(e);
            }
            private static void __Locations_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Deleted(e);
            }
            private static void __Locations_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Location e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Locations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Location, bool>> __Locations_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Location, bool>> filter = null;
                d.Locations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.LocationType>
                __LocationTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.LocationType>(
                    "LocationTypes",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__LocationTypes_Filter);
            private static bool __LocationTypes_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.LocationTypes_CanInsert(ref result);
                return result;
            }
            private static bool __LocationTypes_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.LocationTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __LocationTypes_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.LocationTypes_CanDelete(ref result);
                return result;
            }
            private static bool __LocationTypes_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.LocationTypes_CanRead(ref result);
                return result;
            }
            private static void __LocationTypes_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e)
            {
                d.LocationTypes_Inserting(e);
            }
            private static void __LocationTypes_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e)
            {
                d.LocationTypes_Inserted(e);
            }
            private static void __LocationTypes_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e)
            {
                d.LocationTypes_Updating(e);
            }
            private static void __LocationTypes_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e)
            {
                d.LocationTypes_Updated(e);
            }
            private static void __LocationTypes_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e)
            {
                d.LocationTypes_Deleting(e);
            }
            private static void __LocationTypes_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e)
            {
                d.LocationTypes_Deleted(e);
            }
            private static void __LocationTypes_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.LocationType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LocationTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LocationType, bool>> __LocationTypes_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LocationType, bool>> filter = null;
                d.LocationTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Organization>
                __OrganizationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Organization>(
                    "Organizations",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Organizations_Filter);
            private static bool __Organizations_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Organizations_CanInsert(ref result);
                return result;
            }
            private static bool __Organizations_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Organizations_CanUpdate(ref result);
                return result;
            }
            private static bool __Organizations_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Organizations_CanDelete(ref result);
                return result;
            }
            private static bool __Organizations_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Organizations_CanRead(ref result);
                return result;
            }
            private static void __Organizations_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e)
            {
                d.Organizations_Inserting(e);
            }
            private static void __Organizations_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e)
            {
                d.Organizations_Inserted(e);
            }
            private static void __Organizations_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e)
            {
                d.Organizations_Updating(e);
            }
            private static void __Organizations_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e)
            {
                d.Organizations_Updated(e);
            }
            private static void __Organizations_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e)
            {
                d.Organizations_Deleting(e);
            }
            private static void __Organizations_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e)
            {
                d.Organizations_Deleted(e);
            }
            private static void __Organizations_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Organization e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Organizations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Organization, bool>> __Organizations_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Organization, bool>> filter = null;
                d.Organizations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OrganizationPersonRole>
                __OrganizationPersonRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OrganizationPersonRole>(
                    "OrganizationPersonRoles",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationPersonRoles_Filter);
            private static bool __OrganizationPersonRoles_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationPersonRoles_CanInsert(ref result);
                return result;
            }
            private static bool __OrganizationPersonRoles_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationPersonRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __OrganizationPersonRoles_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationPersonRoles_CanDelete(ref result);
                return result;
            }
            private static bool __OrganizationPersonRoles_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationPersonRoles_CanRead(ref result);
                return result;
            }
            private static void __OrganizationPersonRoles_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e)
            {
                d.OrganizationPersonRoles_Inserting(e);
            }
            private static void __OrganizationPersonRoles_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e)
            {
                d.OrganizationPersonRoles_Inserted(e);
            }
            private static void __OrganizationPersonRoles_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e)
            {
                d.OrganizationPersonRoles_Updating(e);
            }
            private static void __OrganizationPersonRoles_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e)
            {
                d.OrganizationPersonRoles_Updated(e);
            }
            private static void __OrganizationPersonRoles_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e)
            {
                d.OrganizationPersonRoles_Deleting(e);
            }
            private static void __OrganizationPersonRoles_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e)
            {
                d.OrganizationPersonRoles_Deleted(e);
            }
            private static void __OrganizationPersonRoles_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationPersonRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrganizationPersonRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrganizationPersonRole, bool>> __OrganizationPersonRoles_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrganizationPersonRole, bool>> filter = null;
                d.OrganizationPersonRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OrganizationType>
                __OrganizationTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.OrganizationType>(
                    "OrganizationTypes",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__OrganizationTypes_Filter);
            private static bool __OrganizationTypes_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationTypes_CanInsert(ref result);
                return result;
            }
            private static bool __OrganizationTypes_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __OrganizationTypes_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationTypes_CanDelete(ref result);
                return result;
            }
            private static bool __OrganizationTypes_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.OrganizationTypes_CanRead(ref result);
                return result;
            }
            private static void __OrganizationTypes_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e)
            {
                d.OrganizationTypes_Inserting(e);
            }
            private static void __OrganizationTypes_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e)
            {
                d.OrganizationTypes_Inserted(e);
            }
            private static void __OrganizationTypes_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e)
            {
                d.OrganizationTypes_Updating(e);
            }
            private static void __OrganizationTypes_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e)
            {
                d.OrganizationTypes_Updated(e);
            }
            private static void __OrganizationTypes_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e)
            {
                d.OrganizationTypes_Deleting(e);
            }
            private static void __OrganizationTypes_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e)
            {
                d.OrganizationTypes_Deleted(e);
            }
            private static void __OrganizationTypes_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.OrganizationType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrganizationTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrganizationType, bool>> __OrganizationTypes_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrganizationType, bool>> filter = null;
                d.OrganizationTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Person>
                __PeopleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Person>(
                    "People",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__People_Filter);
            private static bool __People_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.People_CanInsert(ref result);
                return result;
            }
            private static bool __People_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.People_CanUpdate(ref result);
                return result;
            }
            private static bool __People_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.People_CanDelete(ref result);
                return result;
            }
            private static bool __People_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.People_CanRead(ref result);
                return result;
            }
            private static void __People_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e)
            {
                d.People_Inserting(e);
            }
            private static void __People_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e)
            {
                d.People_Inserted(e);
            }
            private static void __People_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e)
            {
                d.People_Updating(e);
            }
            private static void __People_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e)
            {
                d.People_Updated(e);
            }
            private static void __People_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e)
            {
                d.People_Deleting(e);
            }
            private static void __People_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e)
            {
                d.People_Deleted(e);
            }
            private static void __People_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Person e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.People_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Person, bool>> __People_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Person, bool>> filter = null;
                d.People_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.ReportingPeriod>
                __ReportingPeriodsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.ReportingPeriod>(
                    "ReportingPeriods",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__ReportingPeriods_Filter);
            private static bool __ReportingPeriods_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ReportingPeriods_CanInsert(ref result);
                return result;
            }
            private static bool __ReportingPeriods_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ReportingPeriods_CanUpdate(ref result);
                return result;
            }
            private static bool __ReportingPeriods_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ReportingPeriods_CanDelete(ref result);
                return result;
            }
            private static bool __ReportingPeriods_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.ReportingPeriods_CanRead(ref result);
                return result;
            }
            private static void __ReportingPeriods_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e)
            {
                d.ReportingPeriods_Inserting(e);
            }
            private static void __ReportingPeriods_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e)
            {
                d.ReportingPeriods_Inserted(e);
            }
            private static void __ReportingPeriods_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e)
            {
                d.ReportingPeriods_Updating(e);
            }
            private static void __ReportingPeriods_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e)
            {
                d.ReportingPeriods_Updated(e);
            }
            private static void __ReportingPeriods_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e)
            {
                d.ReportingPeriods_Deleting(e);
            }
            private static void __ReportingPeriods_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e)
            {
                d.ReportingPeriods_Deleted(e);
            }
            private static void __ReportingPeriods_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.ReportingPeriod e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReportingPeriods_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReportingPeriod, bool>> __ReportingPeriods_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReportingPeriod, bool>> filter = null;
                d.ReportingPeriods_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Role>
                __RolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Role>(
                    "Roles",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Roles_Filter);
            private static bool __Roles_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Roles_CanInsert(ref result);
                return result;
            }
            private static bool __Roles_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Roles_CanUpdate(ref result);
                return result;
            }
            private static bool __Roles_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Roles_CanDelete(ref result);
                return result;
            }
            private static bool __Roles_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Roles_CanRead(ref result);
                return result;
            }
            private static void __Roles_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Inserting(e);
            }
            private static void __Roles_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Inserted(e);
            }
            private static void __Roles_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Updating(e);
            }
            private static void __Roles_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Updated(e);
            }
            private static void __Roles_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Deleting(e);
            }
            private static void __Roles_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Deleted(e);
            }
            private static void __Roles_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Role e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Roles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Role, bool>> __Roles_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Role, bool>> filter = null;
                d.Roles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.IndicatorValue>
                __IndicatorValuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.IndicatorValue>(
                    "IndicatorValues",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__IndicatorValues_Filter);
            private static bool __IndicatorValues_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorValues_CanInsert(ref result);
                return result;
            }
            private static bool __IndicatorValues_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorValues_CanUpdate(ref result);
                return result;
            }
            private static bool __IndicatorValues_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorValues_CanDelete(ref result);
                return result;
            }
            private static bool __IndicatorValues_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.IndicatorValues_CanRead(ref result);
                return result;
            }
            private static void __IndicatorValues_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e)
            {
                d.IndicatorValues_Inserting(e);
            }
            private static void __IndicatorValues_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e)
            {
                d.IndicatorValues_Inserted(e);
            }
            private static void __IndicatorValues_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e)
            {
                d.IndicatorValues_Updating(e);
            }
            private static void __IndicatorValues_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e)
            {
                d.IndicatorValues_Updated(e);
            }
            private static void __IndicatorValues_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e)
            {
                d.IndicatorValues_Deleting(e);
            }
            private static void __IndicatorValues_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e)
            {
                d.IndicatorValues_Deleted(e);
            }
            private static void __IndicatorValues_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.IndicatorValue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IndicatorValues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorValue, bool>> __IndicatorValues_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IndicatorValue, bool>> filter = null;
                d.IndicatorValues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.MilestoneValue>
                __MilestoneValuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.MilestoneValue>(
                    "MilestoneValues",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__MilestoneValues_Filter);
            private static bool __MilestoneValues_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneValues_CanInsert(ref result);
                return result;
            }
            private static bool __MilestoneValues_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneValues_CanUpdate(ref result);
                return result;
            }
            private static bool __MilestoneValues_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneValues_CanDelete(ref result);
                return result;
            }
            private static bool __MilestoneValues_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.MilestoneValues_CanRead(ref result);
                return result;
            }
            private static void __MilestoneValues_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e)
            {
                d.MilestoneValues_Inserting(e);
            }
            private static void __MilestoneValues_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e)
            {
                d.MilestoneValues_Inserted(e);
            }
            private static void __MilestoneValues_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e)
            {
                d.MilestoneValues_Updating(e);
            }
            private static void __MilestoneValues_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e)
            {
                d.MilestoneValues_Updated(e);
            }
            private static void __MilestoneValues_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e)
            {
                d.MilestoneValues_Deleting(e);
            }
            private static void __MilestoneValues_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e)
            {
                d.MilestoneValues_Deleted(e);
            }
            private static void __MilestoneValues_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.MilestoneValue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MilestoneValues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneValue, bool>> __MilestoneValues_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MilestoneValue, bool>> filter = null;
                d.MilestoneValues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Status>
                __StatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.Status>(
                    "Status",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_CanInsert,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_CanUpdate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_CanDelete,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_CanRead,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Inserting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Inserted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Updating,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Updated,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Deleting,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Deleted,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Validate,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Status_Filter);
            private static bool __Status_CanInsert(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Status_CanInsert(ref result);
                return result;
            }
            private static bool __Status_CanUpdate(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Status_CanUpdate(ref result);
                return result;
            }
            private static bool __Status_CanDelete(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Status_CanDelete(ref result);
                return result;
            }
            private static bool __Status_CanRead(global::LightSwitchApplication.MeerkatDataService d)
            {
                bool result = true;
                d.Status_CanRead(ref result);
                return result;
            }
            private static void __Status_Inserting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e)
            {
                d.Status_Inserting(e);
            }
            private static void __Status_Inserted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e)
            {
                d.Status_Inserted(e);
            }
            private static void __Status_Updating(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e)
            {
                d.Status_Updating(e);
            }
            private static void __Status_Updated(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e)
            {
                d.Status_Updated(e);
            }
            private static void __Status_Deleting(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e)
            {
                d.Status_Deleting(e);
            }
            private static void __Status_Deleted(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e)
            {
                d.Status_Deleted(e);
            }
            private static void __Status_Validate(global::LightSwitchApplication.MeerkatDataService d, global::LightSwitchApplication.Status e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Status_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Status, bool>> __Status_Filter(global::LightSwitchApplication.MeerkatDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Status, bool>> filter = null;
                d.Status_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MeerkatDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MeerkatDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.MeerkatDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.MeerkatDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.MeerkatDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.MeerkatDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataVersion>
                __DataVersions_FilteredEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MeerkatDataService, global::LightSwitchApplication.DataVersion>(
                    "DataVersions_Filtered",
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Filtered_CanExecute,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Filtered_Executing,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Filtered_Executed,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Filtered_Failed,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__DataVersions_Filtered_PreprocessQuery);
            private static bool __DataVersions_Filtered_CanExecute(global::LightSwitchApplication.MeerkatDataService d, bool r)
            {
                d.DataVersions_Filtered_CanExecute(ref r);
                return r;
            }
            private static void __DataVersions_Filtered_Executing(global::LightSwitchApplication.MeerkatDataService d, object[] args)
            {
                d.DataVersions_Filtered_Executing();
            }
            private static void __DataVersions_Filtered_Executed(global::LightSwitchApplication.MeerkatDataService d, object[] args)
            {
                d.DataVersions_Filtered_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DataVersion>)args[0]);
            }
            private static void __DataVersions_Filtered_Failed(global::LightSwitchApplication.MeerkatDataService d, object[] args, global::System.Exception ex)
            {
                d.DataVersions_Filtered_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DataVersions_Filtered_PreprocessQuery(global::LightSwitchApplication.MeerkatDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DataVersion> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DataVersion>)args[0];
                d.DataVersions_Filtered_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.MeerkatDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.MeerkatDataService>(
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.MeerkatDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.MeerkatDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.MeerkatDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.MeerkatDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
