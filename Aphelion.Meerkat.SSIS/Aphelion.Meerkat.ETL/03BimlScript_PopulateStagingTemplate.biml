<!--
Update Connection strings
Update StagingTemplate.xlsx path and connection string
Regenerate SSIS packages
-->
<#@ import namespace="System.Data" #>
<#@ import namespace="Varigence.Hadron.CoreLowerer.SchemaManagement" #>
<# var SourceConnection = SchemaManager.CreateConnectionNode("SchemaProvider", "Data Source=.;Initial Catalog=MeerkatStaging;Provider=SQLNCLI11.1;Integrated Security=SSPI;"); #>
<# var DestConnection = SchemaManager.CreateConnectionNode("SchemaProvider", "Data Source=.;Initial Catalog=Meerkat;Provider=SQLNCLI11.1;Integrated Security=SSPI;"); #>
<# var DestSchema = DestConnection.ImportDB("", "", ImportOptions.ExcludeViews); #>
<# var DestTables = DestConnection.GenerateTableNodes(); #>
<# var tableNamesToImport = ExternalDataAccess.GetDataTable(SourceConnection.ConnectionString, "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'").Rows.OfType<System.Data.DataRow>().Select(r => r[0].ToString()); #>  
<Biml xmlns="http://schemas.varigence.com/biml.xsd">
  <Connections>
    <Connection Name="MeerkatStagingBIML" ConnectionString="Data Source=.;Initial Catalog=MeerkatStaging;Provider=SQLNCLI11.1;Integrated Security=SSPI;" />
    <Connection Name="MeerkatBIML" ConnectionString="Data Source=.;Initial Catalog=Meerkat;Provider=SQLNCLI11.1;Integrated Security=SSPI;" />
    <ExcelConnection Name="StagingTemplate" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\Aphelion\Aphelion\Meerkat\StagingTemplates\Staging.DummyTemplate.xlsx;Extended Properties=&quot;Excel 12.0 Xml;HDR=NO&quot;;" DelayValidation="true" />
  </Connections>
  <Packages>
  <!--only generate for excel templates that have a corresponding staging table-->
  <# foreach (var table in DestSchema.TableNodes.Where(item => tableNamesToImport.Contains(item.Name)).OrderBy(item => item.Name)) { #>
    <Package Name="PopulateStagingTemplate_<#=table.SchemaName#>.<#=table.Name#>" ConstraintMode="Linear" ProtectionLevel="EncryptSensitiveWithUserKey">
      <Variables>
        <Variable Name="strConnectionString" DataType="String">
          Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\Aphelion\Aphelion\Meerkat\StagingTemplates\New_PrePopulated\Staging.<#=table.Name#>.xlsx;Extended Properties="EXCEL 12.0 XML;HDR=NO"
        </Variable>
      </Variables>
      <Connections>
        <Connection ConnectionName="StagingTemplate">
          <Expressions>
            <Expression PropertyName="StagingTemplate.ConnectionString">@[User::strConnectionString] </Expression>
          </Expressions>
        </Connection>
      </Connections>
      <Tasks>
        <Dataflow Name="DFT_Staging_<#=table.Name#>_xlsx">
          <Transformations>
            <OleDbSource Name="OLE_SRC_<#=table.SchemaName#>_<#=table.Name#>" ConnectionName="MeerkatBIML">
              <# DataTable SQLColumns = ExternalDataAccess.GetDataTable(DestConnection.ConnectionString, "SELECT DISTINCT C.name AS ForeignKeyColumn, '[' + FS.name + '].[' + FT.name + ']' AS ForeignTable, FC.name AS ForeignTableColumn, FT.name + 'BusinessKey' AS SourceLookupColumn FROM sys.foreign_key_columns AS FK JOIN sys.tables AS T ON FK.parent_object_id = T.object_id JOIN sys.columns AS C ON FK.parent_object_id = C.object_id AND FK.parent_column_id = C.column_id JOIN sys.tables AS FT ON FK.referenced_object_id = FT.object_id JOIN sys.columns AS FC ON FK.referenced_object_id = FC.object_id AND FK.referenced_column_id = FC.column_id JOIN sys.schemas AS FS ON FT.schema_id = FS.schema_id WHERE C.name NOT IN ('Active','AgeBandMin_ID','AgeBandMax_ID','ParentLocation_ID','ParentOrganization_ID','ProjectParentID') AND T.name = '"+ table.Name + "'"); #>
              <DirectInput>
                SELECT * FROM [<#=table.SchemaName#>].[<#=table.Name#>]
              </DirectInput>
            </OleDbSource>
            <# DataTable FKColumns = ExternalDataAccess.GetDataTable(DestConnection.ConnectionString, "SELECT DISTINCT C.name AS ForeignKeyColumn, '[' + FS.name + '].[' + FT.name + ']' AS ForeignTable, FC.name AS ForeignTableColumn, FT.name + 'BusinessKey' AS SourceLookupColumn FROM sys.foreign_key_columns AS FK JOIN sys.tables AS T ON FK.parent_object_id = T.object_id JOIN sys.columns AS C ON FK.parent_object_id = C.object_id AND FK.parent_column_id = C.column_id JOIN sys.tables AS FT ON FK.referenced_object_id = FT.object_id JOIN sys.columns AS FC ON FK.referenced_object_id = FC.object_id AND FK.referenced_column_id = FC.column_id JOIN sys.schemas AS FS ON FT.schema_id = FS.schema_id WHERE C.name NOT IN ('Active','AgeBandMin_ID','AgeBandMax_ID','ParentLocation_ID','ParentOrganization_ID','ProjectParentID') AND T.name = '"+ table.Name + "'"); #>
            <# foreach (DataRow FKColumn in FKColumns.Rows) { #>
            <Lookup Name="LKP_<#=FKColumn["ForeignKeyColumn"]#>" OleDbConnectionName="MeerkatBIML" NoMatchBehavior="IgnoreFailure">
              <DirectInput>SELECT BusinessKey, <#=FKColumn["ForeignTableColumn"]#> FROM <#=FKColumn["ForeignTable"]#></DirectInput>
              <Inputs>
                <Column SourceColumn="<#=FKColumn["ForeignKeyColumn"]#>" TargetColumn="<#=FKColumn["ForeignTableColumn"]#>" />
              </Inputs>
              <Outputs>
                <Column SourceColumn="BusinessKey" TargetColumn="<#=FKColumn["SourceLookupColumn"]#>" />
              </Outputs>
            </Lookup>
            <# } #>
            <DataConversion Name="DCNV_<#=table.SchemaName#>_<#=table.Name#>">
              <Columns>
                <# DataTable StagingColumns = ExternalDataAccess.GetDataTable(SourceConnection.ConnectionString, "select top 0 a.name as TableName, b.name, 1 as [order] from sys.Tables as a inner join sys.Columns as b on (a.object_id = b.object_id) where ( b.name like a.name + 'ID' or b.name like a.name + '_ID' or b.name = 'ID') and a.name = '"+ table.Name + "' UNION ALL select a.name, b.name, 2 from sys.Tables as a inner join sys.Columns as b on (a.object_id = b.object_id) where b.name like '%BusinessKey' and a.name = '"+ table.Name + "' UNION ALL select a.name, b.name, 3 from sys.Tables as a inner join sys.Columns as b on (a.object_id = b.object_id) where b.name not like a.name + 'ID' and b.name not like a.name + '_ID' and b.name != 'ID' and b.name not like '%BusinessKey' and a.name = '"+ table.Name + "' order by TableName, [order], name"); #>
                <# foreach (DataRow Column in StagingColumns.Rows) { #>
                <Column SourceColumn="<#=Column["name"]#>" TargetColumn="<#=Column["name"]#>" DataType="String" Length="-1"/>
                <#} #>
              </Columns>
            </DataConversion>
            <ExcelDestination Name="EX_DST_Staging_<#=table.Name#>" ConnectionName="StagingTemplate" UseFastLoadIfAvailable="false" MaximumInsertCommitSize="2147483647" ValidateExternalMetadata="false">
              <ErrorHandling ErrorRowDisposition="IgnoreFailure" TruncationRowDisposition="IgnoreFailure">
                <Inputs>
                  <Input ErrorRowDisposition="FailComponent" TruncationRowDisposition="IgnoreFailure" InputName="" />
                </Inputs>
              </ErrorHandling>
              <ExternalTableOutput Table="[Sheet1$]" />
              <Columns>
              <# DataTable ExcelColumns = ExternalDataAccess.GetDataTable(SourceConnection.ConnectionString, "select a.name as TableName, b.name, 1 as [order] from sys.Tables as a inner join sys.Columns as b on (a.object_id = b.object_id) where ( b.name like a.name + 'ID' or b.name like a.name + '_ID' or b.name = 'ID') and a.name = '"+ table.Name + "' UNION ALL select a.name, b.name, 2 from sys.Tables as a inner join sys.Columns as b on (a.object_id = b.object_id) where b.name like '%BusinessKey' and a.name = '"+ table.Name + "' UNION ALL select a.name, b.name, 3 from sys.Tables as a inner join sys.Columns as b on (a.object_id = b.object_id) where b.name not like a.name + 'ID' and b.name not like a.name + '_ID' and b.name != 'ID' and b.name not like '%BusinessKey' and a.name = '"+ table.Name + "' order by TableName, [order], name"); #>
              <# int ColNum = 1;#>
              <# foreach (DataRow Column in ExcelColumns.Rows) {
                   if(ColNum==1) {#>
                <Column SourceColumn="<#=Column["name"]#>" TargetColumn="F<#=ColNum#>"/>
                  <# }
                    else { #>
                <Column SourceColumn="<#=Column["name"]#>" TargetColumn="F<#=ColNum#>"/>
                  <# }
                 ColNum = ColNum + 1;#>
              <# } #>
              </Columns>
            </ExcelDestination>
          </Transformations>
        </Dataflow>
      </Tasks>
    </Package>
  <# } #>
  </Packages>
</Biml>
