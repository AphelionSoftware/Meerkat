

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class DataVersionLevel : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the DataVersionLevel entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataVersionLevel()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataVersionLevel(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.DataVersionLevel> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.DataVersionLevel.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevel_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevel_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DataVersionLevel_ID
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersionLevel_ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevel_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevel_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataVersionLevel_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VersionLevelCode
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.VersionLevelCode);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.VersionLevelCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionLevelCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionLevelCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionLevelCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int VersionOrder
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.VersionOrder);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.VersionOrder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionOrder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionOrder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionOrder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.DataVersion> DataVersions
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersions);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.DataVersion> DataVersionsQuery
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetQuery(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersions);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.DataVersionLevel.DetailsClass.GetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.SetValue(this, global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.DataVersionLevel,
                global::LightSwitchApplication.DataVersionLevel.DetailsClass,
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.IImplementation,
                global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersionLevel_ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass>.Entry
                __DataVersionLevelEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass>.Entry(
                    global::LightSwitchApplication.DataVersionLevel.DetailsClass.__DataVersionLevel_CreateNew,
                    global::LightSwitchApplication.DataVersionLevel.DetailsClass.__DataVersionLevel_Created,
                    global::LightSwitchApplication.DataVersionLevel.DetailsClass.__DataVersionLevel_AllowSaveWithErrors);
            private static global::LightSwitchApplication.DataVersionLevel __DataVersionLevel_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.DataVersionLevel> es)
            {
                return new global::LightSwitchApplication.DataVersionLevel(es);
            }
            private static void __DataVersionLevel_Created(global::LightSwitchApplication.DataVersionLevel e)
            {
                e.DataVersionLevel_Created();
            }
            private static bool __DataVersionLevel_AllowSaveWithErrors(global::LightSwitchApplication.DataVersionLevel e)
            {
                bool result = false;
                e.DataVersionLevel_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int> DataVersionLevel_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersionLevel_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string> VersionLevelCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.VersionLevelCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int> VersionOrder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.VersionOrder) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.DataVersion> DataVersions
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersions) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.DataVersion>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int DataVersionLevel_ID { get; }
                new string VersionLevelCode { get; set; }
                new int VersionOrder { get; set; }
                new string Name { get; set; }
                new string Description { get; set; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new string sys_CreatedBy { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new string sys_ModifiedBy { get; set; }
                new global::System.Collections.IEnumerable DataVersions { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Entry
                    DataVersionLevel_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Entry(
                        "DataVersionLevel_ID",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersionLevel_ID_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersionLevel_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersionLevel_ID_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersionLevel_ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersionLevel_ID_OnValueChanged);
                private static void _DataVersionLevel_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._DataVersionLevel_ID, sf);
                }
                private static bool _DataVersionLevel_ID_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.DataVersionLevel_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _DataVersionLevel_ID_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DataVersionLevel_ID_Validate(r);
                }
                private static int _DataVersionLevel_ID_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.DataVersionLevel_ID;
                }
                private static void _DataVersionLevel_ID_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.DataVersionLevel_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry
                    VersionLevelCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry(
                        "VersionLevelCode",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionLevelCode_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionLevelCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionLevelCode_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionLevelCode_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionLevelCode_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionLevelCode_OnValueChanged);
                private static void _VersionLevelCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionLevelCode, sf);
                }
                private static bool _VersionLevelCode_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.VersionLevelCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionLevelCode_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionLevelCode_Validate(r);
                }
                private static string _VersionLevelCode_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionLevelCode;
                }
                private static void _VersionLevelCode_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VersionLevelCode = v;
                }
                private static void _VersionLevelCode_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.VersionLevelCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Entry
                    VersionOrder = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Entry(
                        "VersionOrder",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionOrder_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionOrder_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionOrder_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionOrder_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionOrder_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._VersionOrder_OnValueChanged);
                private static void _VersionOrder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionOrder, sf);
                }
                private static bool _VersionOrder_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.VersionOrder_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionOrder_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionOrder_Validate(r);
                }
                private static int _VersionOrder_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionOrder;
                }
                private static void _VersionOrder_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, int v)
                {
                    d.ImplementationEntity.VersionOrder = v;
                }
                private static void _VersionOrder_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.VersionOrder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.DataVersionLevel.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.DataVersionLevel.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.DataVersion>.Entry
                    DataVersions = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.DataVersion>.Entry(
                        "DataVersions",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersions_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersions_GetReferencedEntities,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._DataVersions_GetEntityCollection);
                private static void _DataVersions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.DataVersion>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._DataVersions, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DataVersion> _DataVersions_GetReferencedEntities(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.DataVersion, global::LightSwitchApplication.DataVersion.DetailsClass>(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.DataVersions, ref d._DataVersions);
                }
                private static global::System.Collections.IEnumerable _DataVersions_GetEntityCollection(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.DataVersions;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.DataVersionLevel.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.DataVersionLevel e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.DataVersionLevel e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.DataVersionLevel.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.DataVersionLevel.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.DataVersionLevel e)
                {
                    e.ActiveType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Data _DataVersionLevel_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data _VersionLevelCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, int>.Data _VersionOrder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.DataVersion>.Data _DataVersions;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DataVersionLevel, global::LightSwitchApplication.DataVersionLevel.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class DimDate : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the DimDate entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DimDate()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DimDate(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.DimDate> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.DimDate.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDate_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDate_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DateID
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DateID);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DateID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.c_Date);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.c_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Day
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.Day);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.Day, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Day_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Day_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Day_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DaySuffix
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DaySuffix);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DaySuffix, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DaySuffix_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DaySuffix_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DaySuffix_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string USDayOfWeek
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.USDayOfWeek);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.USDayOfWeek, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void USDayOfWeek_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void USDayOfWeek_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void USDayOfWeek_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DayOfWeek
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DayOfWeek);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DayOfWeek, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayOfWeek_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayOfWeek_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayOfWeek_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DOWInMonth
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DOWInMonth);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DOWInMonth, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DOWInMonth_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DOWInMonth_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DOWInMonth_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DayOfYear
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DayOfYear);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DayOfYear, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayOfYear_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayOfYear_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayOfYear_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int WeekOfYear
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.WeekOfYear);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.WeekOfYear, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekOfYear_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekOfYear_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekOfYear_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int WeekOfMonth
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.WeekOfMonth);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.WeekOfMonth, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekOfMonth_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekOfMonth_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekOfMonth_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MonthNumber
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.MonthNumber);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.MonthNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MonthName
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.MonthName);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.MonthName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Quarter
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.Quarter);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.Quarter, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quarter_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quarter_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quarter_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QuarterName
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.QuarterName);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.QuarterName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuarterName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuarterName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuarterName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YearName
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.YearName);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.YearName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int YearNumber
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.YearNumber);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.YearNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StandardDate
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.StandardDate);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.StandardDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StandardDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StandardDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StandardDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsPublicHoliday
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.IsPublicHoliday);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.IsPublicHoliday, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPublicHoliday_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPublicHoliday_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPublicHoliday_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HolidayText
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.HolidayText);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.HolidayText, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HolidayText_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HolidayText_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HolidayText_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DateSK
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DateSK);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateSK_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateSK_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateSK_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.DimDate.DetailsClass.GetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.DimDate.DetailsClass.SetValue(this, global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.DimDate,
                global::LightSwitchApplication.DimDate.DetailsClass,
                global::LightSwitchApplication.DimDate.DetailsClass.IImplementation,
                global::LightSwitchApplication.DimDate.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DateID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass>.Entry
                __DimDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass>.Entry(
                    global::LightSwitchApplication.DimDate.DetailsClass.__DimDate_CreateNew,
                    global::LightSwitchApplication.DimDate.DetailsClass.__DimDate_Created,
                    global::LightSwitchApplication.DimDate.DetailsClass.__DimDate_AllowSaveWithErrors);
            private static global::LightSwitchApplication.DimDate __DimDate_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.DimDate> es)
            {
                return new global::LightSwitchApplication.DimDate(es);
            }
            private static void __DimDate_Created(global::LightSwitchApplication.DimDate e)
            {
                e.DimDate_Created();
            }
            private static bool __DimDate_AllowSaveWithErrors(global::LightSwitchApplication.DimDate e)
            {
                bool result = false;
                e.DimDate_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.DimDate.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> DateID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DateID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime> c_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.c_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> Day
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.Day) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> DaySuffix
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DaySuffix) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> USDayOfWeek
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.USDayOfWeek) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> DayOfWeek
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DayOfWeek) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> DOWInMonth
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DOWInMonth) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> DayOfYear
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DayOfYear) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> WeekOfYear
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.WeekOfYear) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> WeekOfMonth
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.WeekOfMonth) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> MonthNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.MonthNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> MonthName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.MonthName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> Quarter
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.Quarter) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> QuarterName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.QuarterName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> YearName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.YearName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> YearNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.YearNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> StandardDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.StandardDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.Nullable<bool>> IsPublicHoliday
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.IsPublicHoliday) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> HolidayText
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.HolidayText) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int> DateSK
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.DateSK) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int DateID { get; set; }
                new global::System.DateTime c_Date { get; set; }
                new int Day { get; set; }
                new string DaySuffix { get; set; }
                new string USDayOfWeek { get; set; }
                new string DayOfWeek { get; set; }
                new int DOWInMonth { get; set; }
                new int DayOfYear { get; set; }
                new int WeekOfYear { get; set; }
                new int WeekOfMonth { get; set; }
                new int MonthNumber { get; set; }
                new string MonthName { get; set; }
                new int Quarter { get; set; }
                new string QuarterName { get; set; }
                new string YearName { get; set; }
                new int YearNumber { get; set; }
                new string StandardDate { get; set; }
                new global::System.Nullable<bool> IsPublicHoliday { get; set; }
                new string HolidayText { get; set; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new string sys_CreatedBy { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new string sys_ModifiedBy { get; set; }
                new int DateSK { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    DateID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "DateID",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateID_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateID_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateID_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateID_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateID_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateID_OnValueChanged);
                private static void _DateID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._DateID, sf);
                }
                private static bool _DateID_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.DateID_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateID_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateID_Validate(r);
                }
                private static int _DateID_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.DateID;
                }
                private static void _DateID_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.DateID = v;
                }
                private static void _DateID_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.DateID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Entry
                    c_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Entry(
                        "c_Date",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._c_Date_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._c_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._c_Date_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._c_Date_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._c_Date_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._c_Date_OnValueChanged);
                private static void _c_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._c_Date, sf);
                }
                private static bool _c_Date_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.c_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _c_Date_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.c_Date_Validate(r);
                }
                private static global::System.DateTime _c_Date_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.c_Date;
                }
                private static void _c_Date_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.c_Date = global::LightSwitchApplication.DimDate.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _c_Date_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.c_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    Day = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "Day",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Day_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Day_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Day_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Day_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Day_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Day_OnValueChanged);
                private static void _Day_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._Day, sf);
                }
                private static bool _Day_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.Day_IsReadOnly(ref result);
                    return result;
                }
                private static void _Day_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Day_Validate(r);
                }
                private static int _Day_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.Day;
                }
                private static void _Day_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Day = v;
                }
                private static void _Day_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.Day_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    DaySuffix = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "DaySuffix",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DaySuffix_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DaySuffix_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DaySuffix_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DaySuffix_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DaySuffix_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DaySuffix_OnValueChanged);
                private static void _DaySuffix_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._DaySuffix, sf);
                }
                private static bool _DaySuffix_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.DaySuffix_IsReadOnly(ref result);
                    return result;
                }
                private static void _DaySuffix_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DaySuffix_Validate(r);
                }
                private static string _DaySuffix_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.DaySuffix;
                }
                private static void _DaySuffix_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DaySuffix = v;
                }
                private static void _DaySuffix_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.DaySuffix_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    USDayOfWeek = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "USDayOfWeek",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._USDayOfWeek_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._USDayOfWeek_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._USDayOfWeek_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._USDayOfWeek_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._USDayOfWeek_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._USDayOfWeek_OnValueChanged);
                private static void _USDayOfWeek_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._USDayOfWeek, sf);
                }
                private static bool _USDayOfWeek_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.USDayOfWeek_IsReadOnly(ref result);
                    return result;
                }
                private static void _USDayOfWeek_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.USDayOfWeek_Validate(r);
                }
                private static string _USDayOfWeek_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.USDayOfWeek;
                }
                private static void _USDayOfWeek_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.USDayOfWeek = v;
                }
                private static void _USDayOfWeek_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.USDayOfWeek_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    DayOfWeek = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "DayOfWeek",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfWeek_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfWeek_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfWeek_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfWeek_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfWeek_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfWeek_OnValueChanged);
                private static void _DayOfWeek_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._DayOfWeek, sf);
                }
                private static bool _DayOfWeek_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.DayOfWeek_IsReadOnly(ref result);
                    return result;
                }
                private static void _DayOfWeek_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DayOfWeek_Validate(r);
                }
                private static string _DayOfWeek_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.DayOfWeek;
                }
                private static void _DayOfWeek_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DayOfWeek = v;
                }
                private static void _DayOfWeek_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.DayOfWeek_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    DOWInMonth = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "DOWInMonth",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DOWInMonth_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DOWInMonth_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DOWInMonth_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DOWInMonth_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DOWInMonth_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DOWInMonth_OnValueChanged);
                private static void _DOWInMonth_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._DOWInMonth, sf);
                }
                private static bool _DOWInMonth_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.DOWInMonth_IsReadOnly(ref result);
                    return result;
                }
                private static void _DOWInMonth_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DOWInMonth_Validate(r);
                }
                private static int _DOWInMonth_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.DOWInMonth;
                }
                private static void _DOWInMonth_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.DOWInMonth = v;
                }
                private static void _DOWInMonth_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.DOWInMonth_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    DayOfYear = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "DayOfYear",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfYear_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfYear_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfYear_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfYear_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfYear_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DayOfYear_OnValueChanged);
                private static void _DayOfYear_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._DayOfYear, sf);
                }
                private static bool _DayOfYear_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.DayOfYear_IsReadOnly(ref result);
                    return result;
                }
                private static void _DayOfYear_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DayOfYear_Validate(r);
                }
                private static int _DayOfYear_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.DayOfYear;
                }
                private static void _DayOfYear_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.DayOfYear = v;
                }
                private static void _DayOfYear_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.DayOfYear_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    WeekOfYear = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "WeekOfYear",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfYear_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfYear_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfYear_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfYear_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfYear_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfYear_OnValueChanged);
                private static void _WeekOfYear_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._WeekOfYear, sf);
                }
                private static bool _WeekOfYear_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.WeekOfYear_IsReadOnly(ref result);
                    return result;
                }
                private static void _WeekOfYear_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WeekOfYear_Validate(r);
                }
                private static int _WeekOfYear_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.WeekOfYear;
                }
                private static void _WeekOfYear_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.WeekOfYear = v;
                }
                private static void _WeekOfYear_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.WeekOfYear_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    WeekOfMonth = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "WeekOfMonth",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfMonth_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfMonth_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfMonth_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfMonth_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfMonth_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._WeekOfMonth_OnValueChanged);
                private static void _WeekOfMonth_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._WeekOfMonth, sf);
                }
                private static bool _WeekOfMonth_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.WeekOfMonth_IsReadOnly(ref result);
                    return result;
                }
                private static void _WeekOfMonth_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WeekOfMonth_Validate(r);
                }
                private static int _WeekOfMonth_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.WeekOfMonth;
                }
                private static void _WeekOfMonth_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.WeekOfMonth = v;
                }
                private static void _WeekOfMonth_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.WeekOfMonth_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    MonthNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "MonthNumber",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthNumber_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthNumber_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthNumber_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthNumber_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthNumber_OnValueChanged);
                private static void _MonthNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthNumber, sf);
                }
                private static bool _MonthNumber_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.MonthNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthNumber_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthNumber_Validate(r);
                }
                private static int _MonthNumber_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthNumber;
                }
                private static void _MonthNumber_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MonthNumber = v;
                }
                private static void _MonthNumber_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.MonthNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    MonthName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "MonthName",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthName_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthName_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthName_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthName_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthName_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._MonthName_OnValueChanged);
                private static void _MonthName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthName, sf);
                }
                private static bool _MonthName_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.MonthName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthName_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthName_Validate(r);
                }
                private static string _MonthName_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthName;
                }
                private static void _MonthName_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MonthName = v;
                }
                private static void _MonthName_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.MonthName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    Quarter = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "Quarter",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Quarter_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Quarter_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Quarter_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Quarter_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Quarter_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._Quarter_OnValueChanged);
                private static void _Quarter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._Quarter, sf);
                }
                private static bool _Quarter_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.Quarter_IsReadOnly(ref result);
                    return result;
                }
                private static void _Quarter_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Quarter_Validate(r);
                }
                private static int _Quarter_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.Quarter;
                }
                private static void _Quarter_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Quarter = v;
                }
                private static void _Quarter_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.Quarter_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    QuarterName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "QuarterName",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._QuarterName_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._QuarterName_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._QuarterName_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._QuarterName_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._QuarterName_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._QuarterName_OnValueChanged);
                private static void _QuarterName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._QuarterName, sf);
                }
                private static bool _QuarterName_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.QuarterName_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuarterName_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuarterName_Validate(r);
                }
                private static string _QuarterName_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.QuarterName;
                }
                private static void _QuarterName_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QuarterName = v;
                }
                private static void _QuarterName_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.QuarterName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    YearName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "YearName",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearName_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearName_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearName_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearName_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearName_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearName_OnValueChanged);
                private static void _YearName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._YearName, sf);
                }
                private static bool _YearName_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.YearName_IsReadOnly(ref result);
                    return result;
                }
                private static void _YearName_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.YearName_Validate(r);
                }
                private static string _YearName_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.YearName;
                }
                private static void _YearName_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.YearName = v;
                }
                private static void _YearName_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.YearName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    YearNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "YearNumber",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearNumber_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearNumber_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearNumber_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearNumber_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._YearNumber_OnValueChanged);
                private static void _YearNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._YearNumber, sf);
                }
                private static bool _YearNumber_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.YearNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _YearNumber_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.YearNumber_Validate(r);
                }
                private static int _YearNumber_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.YearNumber;
                }
                private static void _YearNumber_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, int v)
                {
                    d.ImplementationEntity.YearNumber = v;
                }
                private static void _YearNumber_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.YearNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    StandardDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "StandardDate",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._StandardDate_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._StandardDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._StandardDate_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._StandardDate_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._StandardDate_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._StandardDate_OnValueChanged);
                private static void _StandardDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._StandardDate, sf);
                }
                private static bool _StandardDate_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.StandardDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StandardDate_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StandardDate_Validate(r);
                }
                private static string _StandardDate_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.StandardDate;
                }
                private static void _StandardDate_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StandardDate = v;
                }
                private static void _StandardDate_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.StandardDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsPublicHoliday = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsPublicHoliday",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._IsPublicHoliday_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._IsPublicHoliday_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._IsPublicHoliday_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._IsPublicHoliday_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._IsPublicHoliday_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._IsPublicHoliday_OnValueChanged);
                private static void _IsPublicHoliday_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._IsPublicHoliday, sf);
                }
                private static bool _IsPublicHoliday_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.IsPublicHoliday_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsPublicHoliday_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsPublicHoliday_Validate(r);
                }
                private static global::System.Nullable<bool> _IsPublicHoliday_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.IsPublicHoliday;
                }
                private static void _IsPublicHoliday_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsPublicHoliday = v;
                }
                private static void _IsPublicHoliday_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.IsPublicHoliday_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    HolidayText = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "HolidayText",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._HolidayText_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._HolidayText_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._HolidayText_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._HolidayText_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._HolidayText_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._HolidayText_OnValueChanged);
                private static void _HolidayText_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._HolidayText, sf);
                }
                private static bool _HolidayText_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.HolidayText_IsReadOnly(ref result);
                    return result;
                }
                private static void _HolidayText_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HolidayText_Validate(r);
                }
                private static string _HolidayText_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.HolidayText;
                }
                private static void _HolidayText_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.HolidayText = v;
                }
                private static void _HolidayText_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.HolidayText_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.DimDate.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.DimDate.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry
                    DateSK = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Entry(
                        "DateSK",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateSK_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateSK_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateSK_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateSK_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._DateSK_OnValueChanged);
                private static void _DateSK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._DateSK, sf);
                }
                private static bool _DateSK_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.DateSK_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateSK_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateSK_Validate(r);
                }
                private static int _DateSK_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.DateSK;
                }
                private static void _DateSK_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.DateSK_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DimDate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.DimDate.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.DimDate e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.DimDate.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.DimDate.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.DimDate e)
                {
                    e.ActiveType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _DateID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Data _c_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _Day;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _DaySuffix;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _USDayOfWeek;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _DayOfWeek;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _DOWInMonth;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _DayOfYear;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _WeekOfYear;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _WeekOfMonth;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _MonthNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _MonthName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _Quarter;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _QuarterName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _YearName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _YearNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _StandardDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.Nullable<bool>>.Data _IsPublicHoliday;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _HolidayText;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, int>.Data _DateSK;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.DimDate, global::LightSwitchApplication.DimDate.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
        }
    
        #endregion
    }
    
    #endregion
}
